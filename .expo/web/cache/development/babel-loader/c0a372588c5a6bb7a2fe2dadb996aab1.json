{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component, useState } from \"react\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\nimport Style from \"./Style\";\nimport Calendar from \"react-calendar\";\nimport \"react-calendar/dist/Calendar.css\";\nimport UploadDrafts from \"./UploadDraft\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar ViewDrafts = function (_Component) {\n  _inherits(ViewDrafts, _Component);\n\n  var _super = _createSuper(ViewDrafts);\n\n  function ViewDrafts(props) {\n    var _this;\n\n    _classCallCheck(this, ViewDrafts);\n\n    _this = _super.call(this, props);\n\n    _this.checkLoggedIn = function _callee() {\n      var value;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"@session_token\"));\n\n            case 2:\n              value = _context.sent;\n\n              if (value == null) {\n                _this.props.navigation.navigate(\"Login\");\n              }\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.deleteDraft = function _callee2(index) {\n      var my_id, delText, list, i;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"@id\"));\n\n            case 2:\n              my_id = _context2.sent;\n              delText = _this.state.texts[index];\n              list = _this.state.fullDraft;\n              console.log(list);\n              i = 0;\n\n            case 7:\n              if (!(i < list.length)) {\n                _context2.next = 20;\n                break;\n              }\n\n              if (!(list[i].id == my_id && list[i].text == delText)) {\n                _context2.next = 17;\n                break;\n              }\n\n              list.splice(i, 1);\n              AsyncStorage.setItem(\"draftStore\", JSON.stringify(list));\n              _context2.t0 = console;\n              _context2.next = 14;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"draftStore\"));\n\n            case 14:\n              _context2.t1 = _context2.sent;\n\n              _context2.t0.log.call(_context2.t0, _context2.t1, \"heleoeo\");\n\n              _this.getDrafts();\n\n            case 17:\n              i++;\n              _context2.next = 7;\n              break;\n\n            case 20:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.getDrafts = function _callee3() {\n      var my_id, get, parsed, textList, other, i;\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"@id\"));\n\n            case 2:\n              my_id = _context3.sent;\n              _context3.next = 5;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"draftStore\"));\n\n            case 5:\n              get = _context3.sent;\n              parsed = JSON.parse(get);\n              console.log(parsed);\n\n              _this.setState({\n                fullDraft: parsed\n              });\n\n              textList = [];\n              other = [];\n\n              if (!(parsed == null || parsed.length == 0)) {\n                _context3.next = 14;\n                break;\n              }\n\n              _this.setState({\n                texts: []\n              });\n\n              return _context3.abrupt(\"return\", _this.setState({\n                TextError: \"No Saved Drafts , Please Save Draft\"\n              }));\n\n            case 14:\n              for (i = 0; i < parsed.length; i++) {\n                if (parsed[i].id == my_id) {\n                  textList.push(parsed[i].text);\n                  other.push(parsed[i].text);\n                }\n              }\n\n              _this.setState({\n                initialText: other\n              });\n\n              _this.setState({\n                texts: textList\n              });\n\n              _this.setState({\n                isLoading: false\n              });\n\n            case 18:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.AddPost = function _callee4(index) {\n      var value, id;\n      return _regeneratorRuntime.async(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"@session_token\"));\n\n            case 2:\n              value = _context4.sent;\n              _context4.next = 5;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"@id\"));\n\n            case 5:\n              id = _context4.sent;\n\n              if (!(_this.state.text == \"\")) {\n                _context4.next = 8;\n                break;\n              }\n\n              return _context4.abrupt(\"return\", _this.setState({\n                TextError: \"Please Enter Text\"\n              }));\n\n            case 8:\n              return _context4.abrupt(\"return\", fetch(\"http://localhost:3333/api/1.0.0/user/\" + id + \"/post\", {\n                method: \"POST\",\n                headers: {\n                  \"Content-Type\": \"application/json\",\n                  \"X-Authorization\": value\n                },\n                body: JSON.stringify({\n                  text: _this.state.texts[index]\n                })\n              }).then(function (response) {\n                if (response.status === 200) {\n                  return response.json();\n                } else if (response.status === 401) {\n                  return response.json();\n                } else if (response.status === 201) {\n                  _this.deleteDraft(index);\n\n                  _this.getDrafts();\n\n                  _this.setState({\n                    TextError: \"Draft Uploaded To Profile\"\n                  });\n                } else {\n                  throw \"Something went wrong\";\n                }\n              }).then(function (responseJson) {\n                console.log(responseJson);\n              }).catch(function (error) {\n                console.log(error);\n              }));\n\n            case 9:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.saveDraft = function _callee5(index) {\n      var id, curText, list, oldText, i, initialText;\n      return _regeneratorRuntime.async(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"@id\"));\n\n            case 2:\n              id = _context5.sent;\n              curText = _this.state.texts[index];\n              list = _this.state.fullDraft;\n              oldText = _this.state.initialText[index];\n\n              if (!(curText == \"\")) {\n                _context5.next = 10;\n                break;\n              }\n\n              return _context5.abrupt(\"return\", _this.setState({\n                TextError: \"No Text , Cant Save Draft\"\n              }));\n\n            case 10:\n              for (i = 0; i < list.length; i++) {\n                if (list[i].id == id && list[i].text == oldText) {\n                  list[i].text = curText;\n                  initialText = _this.state.initialText;\n                  initialText[index] = curText;\n\n                  _this.setState({\n                    initialText: initialText\n                  });\n\n                  _this.setState({\n                    fullDraft: list\n                  });\n\n                  _this.setState({\n                    TextError: \"Draft Uploaded\"\n                  });\n\n                  AsyncStorage.setItem(\"draftStore\", JSON.stringify(list));\n                }\n              }\n\n            case 11:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.setDate = function _callee6(index) {\n      var today, date, id, curText, list, time, reg, regBool, hour, min, i;\n      return _regeneratorRuntime.async(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              today = new Date();\n              date = new Date(_this.state.date);\n              _context6.next = 4;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"@id\"));\n\n            case 4:\n              id = _context6.sent;\n              curText = _this.state.texts[index];\n\n              if (!(curText == \"\")) {\n                _context6.next = 8;\n                break;\n              }\n\n              return _context6.abrupt(\"return\", _this.setState({\n                TextError: \"No Text Saved\"\n              }));\n\n            case 8:\n              list = _this.state.fullDraft;\n              time = _this.state.time[index];\n              reg = new RegExp(\"([01]?[0-9]|2[0-3]):[0-5][0-9]\");\n              regBool = reg.test(time);\n\n              if (!(regBool == false)) {\n                _context6.next = 14;\n                break;\n              }\n\n              return _context6.abrupt(\"return\", _this.setState({\n                TextError: \"Invalid Time Entered (Please Try Again)\"\n              }));\n\n            case 14:\n              hour = String(time.slice(0, 2));\n              min = String(time.slice(3, 5));\n              date.setHours(hour, min, 0, 0);\n\n              if (!(date == \"invalid date\" || date < today)) {\n                _context6.next = 19;\n                break;\n              }\n\n              return _context6.abrupt(\"return\", _this.setState({\n                TextError: \"invalid format or date in the past\"\n              }));\n\n            case 19:\n              for (i = 0; i < list.length; i++) {\n                if (list[i].id == id && list[i].text == curText) {\n                  list[i].date = date;\n\n                  _this.setState({\n                    fullDraft: list\n                  });\n\n                  console.log(_this.state.fullDraft);\n\n                  _this.setState({\n                    TextError: \"Draft Scheduled for \" + date\n                  });\n\n                  AsyncStorage.setItem(\"draftStore\", JSON.stringify(list));\n\n                  _this.getDrafts();\n                }\n              }\n\n            case 20:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.checkSchedule = function (index) {\n      var date = _this.state.fullDraft[index].date;\n\n      if (date != null) {\n        date = new Date(date);\n        return _jsx(View, {\n          children: _jsxs(Text, {\n            children: [\"Schedule Upload For \", date.toLocaleString(\"en-GB\")]\n          })\n        });\n      }\n    };\n\n    _this.state = {\n      texts: [],\n      fullDraft: [],\n      isLoading: true,\n      TextError: \"\",\n      time: [],\n      initialText: [],\n      date: new Date()\n    };\n    return _this;\n  }\n\n  _createClass(ViewDrafts, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      return _regeneratorRuntime.async(function componentDidMount$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              this.unsubscribe = this.props.navigation.addListener(\"focus\", function () {\n                _this2.checkLoggedIn();\n\n                UploadDrafts.dateCheck();\n\n                _this2.getDrafts();\n              });\n\n            case 1:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.unsubscribe();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      if (this.state.isLoading) {\n        return _jsxs(View, {\n          style: {\n            flex: 1,\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            alignItems: \"center\"\n          },\n          children: [_jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              return _this3.props.navigation.goBack();\n            },\n            style: Style.searchBtn,\n            children: _jsx(Text, {\n              style: Style.searchText,\n              children: \"Back\"\n            })\n          }), _jsx(Text, {\n            children: \"Loading\"\n          }), _jsx(Text, {\n            children: this.state.TextError\n          })]\n        });\n      } else {\n        return _jsxs(ScrollView, {\n          children: [_jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              return _this3.props.navigation.goBack();\n            },\n            style: Style.searchBtn,\n            children: _jsx(Text, {\n              style: Style.searchText,\n              children: \"Back\"\n            })\n          }), _jsx(Text, {\n            style: Style.titleText,\n            children: \"Draft's\"\n          }), _jsx(Text, {\n            style: Style.errorText,\n            children: this.state.TextError\n          }), _jsx(FlatList, {\n            data: this.state.texts,\n            getChildrenName: function getChildrenName(data) {\n              return \"item\";\n            },\n            renderItem: function renderItem(_ref) {\n              var item = _ref.item,\n                  index = _ref.index;\n              return _jsxs(ScrollView, {\n                children: [_jsx(TextInput, {\n                  onChangeText: function onChangeText(text) {\n                    var texts = _this3.state.texts;\n                    texts[index] = text;\n\n                    _this3.setState({\n                      texts: texts\n                    });\n                  },\n                  value: _this3.state.texts[index],\n                  style: Style.inputBox\n                }), _jsx(TouchableOpacity, {\n                  onPress: function onPress() {\n                    _this3.saveDraft(index);\n                  },\n                  style: Style.buttonStyleDefault,\n                  children: _jsx(Text, {\n                    style: Style.buttonText,\n                    children: \"Save To Storage\"\n                  })\n                }), _jsx(TouchableOpacity, {\n                  onPress: function onPress() {\n                    _this3.AddPost(index);\n                  },\n                  style: Style.buttonStyleDefault,\n                  children: _jsx(Text, {\n                    style: Style.buttonText,\n                    children: \"Upload Now\"\n                  })\n                }), _jsx(TouchableOpacity, {\n                  onPress: function onPress() {\n                    _this3.deleteDraft(index);\n                  },\n                  style: Style.buttonStyleDefault,\n                  children: _jsx(Text, {\n                    style: Style.buttonText,\n                    children: \"Delete\"\n                  })\n                }), _jsx(TextInput, {\n                  placeholder: \"HH:MM (24 Hour Format)\",\n                  onChangeText: function onChangeText(times) {\n                    var time = _this3.state.time;\n                    time[index] = times;\n\n                    _this3.setState({\n                      time: time\n                    });\n                  },\n                  value: _this3.state.time[index],\n                  style: Style.inputBox\n                }), _jsx(View, {\n                  style: {\n                    flexDirection: \"column\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\"\n                  },\n                  children: _jsx(Calendar, {\n                    onChange: function onChange(date) {\n                      return _this3.setState({\n                        date: date\n                      });\n                    },\n                    value: _this3.state.date\n                  })\n                }), _jsx(TouchableOpacity, {\n                  onPress: function onPress() {\n                    return _this3.setDate(index);\n                  },\n                  style: Style.buttonStyleDefault,\n                  children: _jsx(Text, {\n                    style: Style.buttonText,\n                    children: \"Schedule Upload\"\n                  })\n                }), _jsx(Text, {\n                  style: Style.errorText,\n                  children: _this3.checkSchedule(index)\n                }), _jsx(Text, {\n                  style: {\n                    paddingBottom: 50\n                  }\n                })]\n              });\n            }\n          })]\n        });\n      }\n    }\n  }]);\n\n  return ViewDrafts;\n}(Component);\n\nexport default ViewDrafts;","map":{"version":3,"sources":["C:/Users/Ruman/Documents/GitHub/spacebook2/components/ViewDrafts.js"],"names":["React","Component","useState","AsyncStorage","TouchableOpacity","Style","Calendar","UploadDrafts","ViewDrafts","props","checkLoggedIn","getItem","value","navigation","navigate","deleteDraft","index","my_id","delText","state","texts","list","fullDraft","console","log","i","length","id","text","splice","setItem","JSON","stringify","getDrafts","get","parsed","parse","setState","textList","other","TextError","push","initialText","isLoading","AddPost","fetch","method","headers","body","then","response","status","json","responseJson","catch","error","saveDraft","curText","oldText","setDate","today","Date","date","time","reg","RegExp","regBool","test","hour","String","slice","min","setHours","checkSchedule","toLocaleString","unsubscribe","addListener","dateCheck","flex","flexDirection","justifyContent","alignItems","goBack","searchBtn","searchText","titleText","errorText","data","item","inputBox","buttonStyleDefault","buttonText","times","paddingBottom"],"mappings":"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","sourcesContent":["import React, { Component, useState } from \"react\";\r\nimport { ScrollView, View, Text, FlatList, TextInput } from \"react-native\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\r\nimport Style from \"./Style\";\r\nimport Calendar from \"react-calendar\";\r\nimport \"react-calendar/dist/Calendar.css\";\r\nimport UploadDrafts from \"./UploadDraft\";\r\n\r\nclass ViewDrafts extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      texts: [],\r\n      fullDraft: [],\r\n      isLoading: true,\r\n      TextError: \"\",\r\n      time: [],\r\n      initialText: [],\r\n      date: new Date(),\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    this.unsubscribe = this.props.navigation.addListener(\"focus\", () => {\r\n      this.checkLoggedIn();\r\n      UploadDrafts.dateCheck();\r\n      this.getDrafts();\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.unsubscribe();\r\n  }\r\n\r\n  checkLoggedIn = async () => {\r\n    const value = await AsyncStorage.getItem(\"@session_token\");\r\n\r\n    if (value == null) {\r\n      this.props.navigation.navigate(\"Login\");\r\n    }\r\n  };\r\n  deleteDraft = async (index) => {\r\n    let my_id = await AsyncStorage.getItem(\"@id\");\r\n\r\n    let delText = this.state.texts[index];\r\n\r\n    let list = this.state.fullDraft;\r\n\r\n    console.log(list);\r\n\r\n    for (let i = 0; i < list.length; i++) {\r\n      if (list[i].id == my_id && list[i].text == delText) {\r\n        list.splice(i, 1);\r\n        AsyncStorage.setItem(\"draftStore\", JSON.stringify(list));\r\n\r\n        console.log(await AsyncStorage.getItem(\"draftStore\"), \"heleoeo\");\r\n\r\n        this.getDrafts();\r\n      }\r\n    }\r\n  };\r\n  getDrafts = async () => {\r\n    let my_id = await AsyncStorage.getItem(\"@id\");\r\n    let get = await AsyncStorage.getItem(\"draftStore\");\r\n    let parsed = JSON.parse(get);\r\n\r\n    console.log(parsed);\r\n\r\n    this.setState({ fullDraft: parsed });\r\n\r\n    let textList = [];\r\n    let other = [];\r\n\r\n    if (parsed == null || parsed.length == 0) {\r\n      this.setState({ texts: [] });\r\n      return this.setState({\r\n        TextError: \"No Saved Drafts , Please Save Draft\",\r\n      });\r\n    }\r\n\r\n    for (let i = 0; i < parsed.length; i++) {\r\n      if (parsed[i].id == my_id) {\r\n        textList.push(parsed[i].text);\r\n        other.push(parsed[i].text);\r\n      }\r\n    }\r\n\r\n    this.setState({ initialText: other });\r\n    this.setState({ texts: textList });\r\n\r\n    this.setState({ isLoading: false });\r\n  };\r\n  AddPost = async (index) => {\r\n    const value = await AsyncStorage.getItem(\"@session_token\");\r\n    const id = await AsyncStorage.getItem(\"@id\");\r\n\r\n    if (this.state.text == \"\") {\r\n      return this.setState({ TextError: \"Please Enter Text\" });\r\n    }\r\n\r\n    return fetch(\"http://localhost:3333/api/1.0.0/user/\" + id + \"/post\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\", \"X-Authorization\": value },\r\n      body: JSON.stringify({\r\n        text: this.state.texts[index],\r\n      }),\r\n    })\r\n      .then((response) => {\r\n        if (response.status === 200) {\r\n          return response.json();\r\n        } else if (response.status === 401) {\r\n          return response.json();\r\n        } else if (response.status === 201) {\r\n          this.deleteDraft(index);\r\n          this.getDrafts();\r\n          this.setState({ TextError: \"Draft Uploaded To Profile\" });\r\n        } else {\r\n          throw \"Something went wrong\";\r\n        }\r\n      })\r\n      .then((responseJson) => {\r\n        console.log(responseJson);\r\n      })\r\n\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  saveDraft = async (index) => {\r\n    let id = await AsyncStorage.getItem(\"@id\");\r\n\r\n    let curText = this.state.texts[index];\r\n    let list = this.state.fullDraft;\r\n    let oldText = this.state.initialText[index];\r\n\r\n    if (curText == \"\") {\r\n      return this.setState({ TextError: \"No Text , Cant Save Draft\" });\r\n    } else {\r\n      for (let i = 0; i < list.length; i++) {\r\n        if (list[i].id == id && list[i].text == oldText) {\r\n          list[i].text = curText;\r\n\r\n          let initialText = this.state.initialText;\r\n          initialText[index] = curText;\r\n          this.setState({ initialText });\r\n\r\n          this.setState({ fullDraft: list });\r\n          this.setState({ TextError: \"Draft Uploaded\" });\r\n          AsyncStorage.setItem(\"draftStore\", JSON.stringify(list));\r\n        }\r\n      }\r\n    }\r\n  };\r\n  setDate = async (index) => {\r\n    const today = new Date();\r\n    let date = new Date(this.state.date);\r\n\r\n    const id = await AsyncStorage.getItem(\"@id\");\r\n\r\n    const curText = this.state.texts[index];\r\n    if (curText == \"\") {\r\n      return this.setState({ TextError: \"No Text Saved\" });\r\n    }\r\n    const list = this.state.fullDraft;\r\n    const time = this.state.time[index];\r\n\r\n    const reg = new RegExp(\"([01]?[0-9]|2[0-3]):[0-5][0-9]\");\r\n    let regBool = reg.test(time);\r\n\r\n    if (regBool == false) {\r\n      return this.setState({\r\n        TextError: \"Invalid Time Entered (Please Try Again)\",\r\n      });\r\n    }\r\n\r\n    let hour = String(time.slice(0, 2));\r\n    let min = String(time.slice(3, 5));\r\n\r\n    date.setHours(hour, min, 0, 0);\r\n\r\n    if (date == \"invalid date\" || date < today) {\r\n      return this.setState({ TextError: \"invalid format or date in the past\" });\r\n    }\r\n\r\n    for (let i = 0; i < list.length; i++) {\r\n      if (list[i].id == id && list[i].text == curText) {\r\n        list[i].date = date;\r\n\r\n        this.setState({ fullDraft: list });\r\n        console.log(this.state.fullDraft);\r\n        this.setState({ TextError: \"Draft Scheduled for \" + date });\r\n        AsyncStorage.setItem(\"draftStore\", JSON.stringify(list));\r\n        this.getDrafts();\r\n      }\r\n    }\r\n  };\r\n  checkSchedule = (index) => {\r\n    let date = this.state.fullDraft[index].date;\r\n\r\n    if (date != null) {\r\n      date = new Date(date);\r\n      return (\r\n        <View>\r\n          <Text>Schedule Upload For {date.toLocaleString(\"en-GB\")}</Text>\r\n        </View>\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    if (this.state.isLoading) {\r\n      return (\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <TouchableOpacity\r\n            onPress={() => this.props.navigation.goBack()}\r\n            style={Style.searchBtn}\r\n          >\r\n            <Text style={Style.searchText}>Back</Text>\r\n          </TouchableOpacity>\r\n\r\n          <Text>Loading</Text>\r\n\r\n          <Text>{this.state.TextError}</Text>\r\n        </View>\r\n      );\r\n    } else {\r\n      return (\r\n        <ScrollView>\r\n          <TouchableOpacity\r\n            onPress={() => this.props.navigation.goBack()}\r\n            style={Style.searchBtn}\r\n          >\r\n            <Text style={Style.searchText}>Back</Text>\r\n          </TouchableOpacity>\r\n\r\n          <Text style={Style.titleText}>Draft's</Text>\r\n\r\n          <Text style={Style.errorText}>{this.state.TextError}</Text>\r\n\r\n          <FlatList\r\n            data={this.state.texts}\r\n            getChildrenName={(data) => \"item\"}\r\n            renderItem={({ item, index }) => (\r\n              <ScrollView>\r\n                <TextInput\r\n                  onChangeText={(text) => {\r\n                    let texts = this.state.texts;\r\n                    texts[index] = text;\r\n                    this.setState({ texts });\r\n                  }}\r\n                  value={this.state.texts[index]}\r\n                  style={Style.inputBox}\r\n                />\r\n\r\n                <TouchableOpacity\r\n                  onPress={() => {\r\n                    this.saveDraft(index);\r\n                  }}\r\n                  style={Style.buttonStyleDefault}\r\n                >\r\n                  <Text style={Style.buttonText}>Save To Storage</Text>\r\n                </TouchableOpacity>\r\n\r\n                <TouchableOpacity\r\n                  onPress={() => {\r\n                    this.AddPost(index);\r\n                  }}\r\n                  style={Style.buttonStyleDefault}\r\n                >\r\n                  <Text style={Style.buttonText}>Upload Now</Text>\r\n                </TouchableOpacity>\r\n\r\n                <TouchableOpacity\r\n                  onPress={() => {\r\n                    this.deleteDraft(index);\r\n                  }}\r\n                  style={Style.buttonStyleDefault}\r\n                >\r\n                  <Text style={Style.buttonText}>Delete</Text>\r\n                </TouchableOpacity>\r\n                <TextInput\r\n                  placeholder=\"HH:MM (24 Hour Format)\"\r\n                  onChangeText={(times) => {\r\n                    let time = this.state.time;\r\n                    time[index] = times;\r\n                    this.setState({ time });\r\n                  }}\r\n                  value={this.state.time[index]}\r\n                  style={Style.inputBox}\r\n                />\r\n\r\n                <View\r\n                  style={{\r\n                    flexDirection: \"column\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  <Calendar\r\n                    onChange={(date) => this.setState({ date })}\r\n                    value={this.state.date}\r\n                  />\r\n                </View>\r\n\r\n                <TouchableOpacity\r\n                  onPress={() => this.setDate(index)}\r\n                  style={Style.buttonStyleDefault}\r\n                >\r\n                  <Text style={Style.buttonText}>Schedule Upload</Text>\r\n                </TouchableOpacity>\r\n                <Text style={Style.errorText}>{this.checkSchedule(index)}</Text>\r\n                <Text style={{ paddingBottom: 50 }}></Text>\r\n              </ScrollView>\r\n            )}\r\n          />\r\n        </ScrollView>\r\n      );\r\n    }\r\n  }\r\n}\r\nexport default ViewDrafts;\r\n"]},"metadata":{},"sourceType":"module"}