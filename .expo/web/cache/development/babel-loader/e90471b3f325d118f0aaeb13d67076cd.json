{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { Camera } from \"expo-camera\";\nimport Style from \"./Style\";\nimport UploadDrafts from \"./UploadDraft\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar UploadPhoto = function (_Component) {\n  _inherits(UploadPhoto, _Component);\n\n  var _super = _createSuper(UploadPhoto);\n\n  function UploadPhoto(props) {\n    var _this;\n\n    _classCallCheck(this, UploadPhoto);\n\n    _this = _super.call(this, props);\n\n    _this.checkLoggedIn = function _callee() {\n      var value;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"@session_token\"));\n\n            case 2:\n              value = _context.sent;\n              console.log(value);\n\n              if (value == null) {\n                _this.props.navigation.navigate(\"Login\");\n              }\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.takePicture = function _callee2() {\n      var options, data;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!_this.camera) {\n                _context2.next = 6;\n                break;\n              }\n\n              options = {\n                quality: 0.5,\n                based64: true,\n                onPictureSaved: function onPictureSaved(data) {\n                  return _this.sendToServer(data);\n                }\n              };\n              _context2.next = 4;\n              return _regeneratorRuntime.awrap(_this.camera.takePictureAsync(options));\n\n            case 4:\n              data = _context2.sent;\n              console.log(data.uri);\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.sendToServer = function _callee3(data) {\n      var value, id, res, blob;\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"@session_token\"));\n\n            case 2:\n              value = _context3.sent;\n              _context3.next = 5;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"@id\"));\n\n            case 5:\n              id = _context3.sent;\n              _context3.next = 8;\n              return _regeneratorRuntime.awrap(fetch(data.base64));\n\n            case 8:\n              res = _context3.sent;\n              _context3.next = 11;\n              return _regeneratorRuntime.awrap(res.blob());\n\n            case 11:\n              blob = _context3.sent;\n              return _context3.abrupt(\"return\", fetch(\"http://localhost:3333/api/1.0.0/user/\" + id + \"/photo\", {\n                method: \"POST\",\n                headers: {\n                  \"Content-Type\": \"image/png\",\n                  \"X-Authorization\": value\n                },\n                body: blob\n              }).then(function (response) {\n                _this.setState({\n                  TextError: \"Picture Uploaded\"\n                });\n              }).catch(function (err) {\n                console.log(err);\n              }));\n\n            case 13:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.state = {\n      isLoading: true,\n      hasPermission: null,\n      type: Camera.Constants.Type.back,\n      TextError: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(UploadPhoto, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var _await$Camera$request, status;\n\n      return _regeneratorRuntime.async(function componentDidMount$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              this.unsubscribe = this.props.navigation.addListener(\"focus\", function () {\n                _this2.checkLoggedIn();\n\n                UploadDrafts.dateCheck();\n              });\n              _context4.next = 3;\n              return _regeneratorRuntime.awrap(Camera.requestCameraPermissionsAsync());\n\n            case 3:\n              _await$Camera$request = _context4.sent;\n              status = _await$Camera$request.status;\n              this.setState({\n                hasPermission: status === \"granted\"\n              });\n\n            case 6:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.unsubscribe();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      if (this.state.hasPermission) {\n        return _jsxs(View, {\n          children: [_jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              return _this3.props.navigation.goBack();\n            },\n            style: Style.searchBtn,\n            children: _jsx(Text, {\n              style: Style.searchText,\n              children: \"Back\"\n            })\n          }), _jsxs(Camera, {\n            type: this.state.type,\n            ref: function ref(_ref) {\n              return _this3.camera = _ref;\n            },\n            children: [_jsx(TouchableOpacity, {\n              onPress: function onPress() {\n                var type = type === Camera.Constants.Type.back ? Camera.Constants.Type.front : Camera.Constants.Type.back;\n\n                _this3.setState({\n                  type: type\n                });\n              },\n              children: _jsx(Text, {\n                style: {\n                  backgroundColor: 'white',\n                  padding: 3,\n                  alignSelf: 'flex-start'\n                },\n                children: \"Flip \"\n              })\n            }), _jsx(TouchableOpacity, {\n              onPress: function onPress() {\n                _this3.takePicture();\n              },\n              style: {\n                height: 200,\n                width: 100\n              },\n              children: _jsx(Text, {\n                style: {\n                  backgroundColor: 'white',\n                  padding: 3,\n                  alignSelf: 'flex-start'\n                },\n                children: \"Upload Picture\"\n              })\n            })]\n          }), _jsx(Text, {\n            children: this.state.TextError\n          })]\n        });\n      } else {\n        return _jsx(View, {\n          children: _jsx(Text, {\n            style: {\n              textAlign: \"center\",\n              fontSize: 20,\n              fontWeight: \"500\"\n            },\n            children: \"No Permissons\"\n          })\n        });\n      }\n    }\n  }]);\n\n  return UploadPhoto;\n}(Component);\n\nexport default UploadPhoto;","map":{"version":3,"sources":["C:/Users/Ruman/Documents/GitHub/spacebook2/components/UploadPhoto.js"],"names":["React","Component","AsyncStorage","Camera","Style","UploadDrafts","UploadPhoto","props","checkLoggedIn","getItem","value","console","log","navigation","navigate","takePicture","camera","options","quality","based64","onPictureSaved","data","sendToServer","takePictureAsync","uri","id","fetch","base64","res","blob","method","headers","body","then","response","setState","TextError","catch","err","state","isLoading","hasPermission","type","Constants","Type","back","unsubscribe","addListener","dateCheck","requestCameraPermissionsAsync","status","goBack","searchBtn","searchText","ref","front","backgroundColor","padding","alignSelf","height","width","textAlign","fontSize","fontWeight"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { View,Text,FlatList,ScrollView,TouchableOpacity } from \"react-native\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { Camera } from \"expo-camera\";\r\nimport Style from \"./Style\";\r\nimport UploadDrafts from \"./UploadDraft\";\r\n\r\nclass UploadPhoto extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isLoading: true,\r\n      hasPermission: null,\r\n      type: Camera.Constants.Type.back,\r\n      TextError: \"\",\r\n    };\r\n  }\r\n  async componentDidMount() {\r\n    this.unsubscribe = this.props.navigation.addListener(\"focus\", () => {\r\n      this.checkLoggedIn();\r\n      UploadDrafts.dateCheck();\r\n    });\r\n    const { status } = await Camera.requestCameraPermissionsAsync();\r\n    this.setState({ hasPermission: status === \"granted\" });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.unsubscribe();\r\n  }\r\n\r\n  checkLoggedIn = async () => {\r\n    const value = await AsyncStorage.getItem(\"@session_token\");\r\n    console.log(value);\r\n\r\n    if (value == null) {\r\n      this.props.navigation.navigate(\"Login\");\r\n    }\r\n  };\r\n  takePicture = async () => {\r\n    if (this.camera) {\r\n      const options = {\r\n        quality: 0.5,\r\n        based64: true,\r\n        onPictureSaved: (data) => this.sendToServer(data),\r\n      };\r\n      const data = await this.camera.takePictureAsync(options);\r\n\r\n      console.log(data.uri);\r\n    }\r\n  };\r\n  sendToServer = async (data) => {\r\n    let value = await AsyncStorage.getItem(\"@session_token\");\r\n    let id = await AsyncStorage.getItem(\"@id\");\r\n\r\n    let res = await fetch(data.base64);\r\n    let blob = await res.blob();\r\n\r\n    return fetch(\"http://localhost:3333/api/1.0.0/user/\" + id + \"/photo\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"image/png\", \"X-Authorization\": value },\r\n      body: blob,\r\n    })\r\n      .then((response) => {\r\n        this.setState({ TextError: \"Picture Uploaded\" });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    if (this.state.hasPermission) {\r\n      return (\r\n        <View>\r\n          <TouchableOpacity\r\n            onPress={() => this.props.navigation.goBack()}\r\n            style={Style.searchBtn}\r\n          >\r\n            <Text style={Style.searchText}>Back</Text>\r\n          </TouchableOpacity>\r\n\r\n          <Camera type={this.state.type} ref={(ref) => (this.camera = ref)}>\r\n            <TouchableOpacity\r\n              onPress={() => {\r\n                let type =\r\n                  type === Camera.Constants.Type.back\r\n                    ? Camera.Constants.Type.front\r\n                    : Camera.Constants.Type.back;\r\n\r\n                this.setState({ type: type });\r\n              }}\r\n            >\r\n              <Text style={{backgroundColor: 'white',padding:3,alignSelf: 'flex-start'}}>Flip </Text>\r\n            </TouchableOpacity>\r\n\r\n            <TouchableOpacity\r\n              onPress={() => {\r\n                this.takePicture();\r\n              }}\r\n              style={{\r\n                height: 200,\r\n                width: 100,\r\n              }}\r\n            >\r\n              <Text style={{backgroundColor: 'white',padding:3,alignSelf: 'flex-start'}}>Upload Picture</Text>\r\n            </TouchableOpacity>\r\n          </Camera>\r\n          <Text>{this.state.TextError}</Text>\r\n        </View>\r\n      );\r\n    } else {\r\n      return (\r\n        <View>\r\n          <Text\r\n            style={{ textAlign: \"center\", fontSize: 20, fontWeight: \"500\" }}\r\n          >\r\n            No Permissons\r\n          </Text>\r\n        </View>\r\n      );\r\n    }\r\n  }\r\n}\r\nexport default UploadPhoto;\r\n"]},"metadata":{},"sourceType":"module"}