{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport * as React from 'react';\nimport * as Utils from \"./WebCameraUtils\";\nimport { FacingModeToCameraType } from \"./WebConstants\";\nvar VALID_SETTINGS_KEYS = ['autoFocus', 'flashMode', 'exposureCompensation', 'colorTemperature', 'iso', 'brightness', 'contrast', 'saturation', 'sharpness', 'focusDistance', 'whiteBalance', 'zoom'];\n\nfunction useLoadedVideo(video, onLoaded) {\n  React.useEffect(function () {\n    if (video) {\n      video.addEventListener('loadedmetadata', function () {\n        requestAnimationFrame(function () {\n          onLoaded();\n        });\n      });\n    }\n  }, [video]);\n}\n\nexport function useWebCameraStream(video, preferredType, settings, _ref) {\n  var onCameraReady = _ref.onCameraReady,\n      onMountError = _ref.onMountError;\n  var isStartingCamera = React.useRef(false);\n  var activeStreams = React.useRef([]);\n  var capabilities = React.useRef({\n    autoFocus: 'continuous',\n    flashMode: 'off',\n    whiteBalance: 'continuous',\n    zoom: 1\n  });\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      stream = _React$useState2[0],\n      setStream = _React$useState2[1];\n\n  var mediaTrackSettings = React.useMemo(function () {\n    return stream ? stream.getTracks()[0].getSettings() : null;\n  }, [stream]);\n  var type = React.useMemo(function () {\n    if (!mediaTrackSettings) {\n      return null;\n    }\n\n    var _mediaTrackSettings$f = mediaTrackSettings.facingMode,\n        facingMode = _mediaTrackSettings$f === void 0 ? 'user' : _mediaTrackSettings$f;\n    return FacingModeToCameraType[facingMode];\n  }, [mediaTrackSettings]);\n  var getStreamDeviceAsync = React.useCallback(function _callee() {\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(Utils.getPreferredStreamDevice(preferredType));\n\n          case 3:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 6:\n            _context.prev = 6;\n            _context.t0 = _context[\"catch\"](0);\n\n            if (__DEV__) {\n              console.warn(\"Error requesting UserMedia for type \\\"\" + preferredType + \"\\\":\", _context.t0);\n            }\n\n            if (onMountError) {\n              onMountError({\n                nativeEvent: _context.t0\n              });\n            }\n\n            return _context.abrupt(\"return\", null);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 6]], Promise);\n  }, [preferredType, onMountError]);\n  var resumeAsync = React.useCallback(function _callee2() {\n    var nextStream;\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(getStreamDeviceAsync());\n\n          case 2:\n            nextStream = _context2.sent;\n\n            if (!Utils.compareStreams(nextStream, stream)) {\n              _context2.next = 5;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", false);\n\n          case 5:\n            if (!activeStreams.current.some(function (value) {\n              return value.id === (nextStream == null ? void 0 : nextStream.id);\n            })) {\n              activeStreams.current.push(nextStream);\n            }\n\n            setStream(nextStream);\n\n            if (onCameraReady) {\n              onCameraReady();\n            }\n\n            return _context2.abrupt(\"return\", false);\n\n          case 9:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, [getStreamDeviceAsync, setStream, onCameraReady, stream, activeStreams.current]);\n  React.useEffect(function () {\n    if (isStartingCamera.current) {\n      return;\n    }\n\n    isStartingCamera.current = true;\n    resumeAsync().then(function (isStarting) {\n      isStartingCamera.current = isStarting;\n    }).catch(function () {\n      isStartingCamera.current = false;\n    });\n  }, [preferredType]);\n  React.useEffect(function () {\n    var changes = {};\n\n    for (var _i = 0, _Object$keys = Object.keys(settings); _i < _Object$keys.length; _i++) {\n      var key = _Object$keys[_i];\n\n      if (!VALID_SETTINGS_KEYS.includes(key)) {\n        continue;\n      }\n\n      var nextValue = settings[key];\n\n      if (nextValue !== capabilities.current[key]) {\n        changes[key] = nextValue;\n      }\n    }\n\n    var hasChanges = !!Object.keys(changes).length;\n\n    var nextWebCameraSettings = _objectSpread(_objectSpread({}, capabilities.current), changes);\n\n    if (hasChanges) {\n      Utils.syncTrackCapabilities(preferredType, stream, changes);\n    }\n\n    capabilities.current = nextWebCameraSettings;\n  }, [settings.autoFocus, settings.flashMode, settings.exposureCompensation, settings.colorTemperature, settings.iso, settings.brightness, settings.contrast, settings.saturation, settings.sharpness, settings.focusDistance, settings.whiteBalance, settings.zoom]);\n  React.useEffect(function () {\n    if (!video.current) {\n      return;\n    }\n\n    Utils.setVideoSource(video.current, stream);\n  }, [video.current, stream]);\n  React.useEffect(function () {\n    return function () {\n      for (var _iterator = _createForOfIteratorHelperLoose(activeStreams.current), _step; !(_step = _iterator()).done;) {\n        var _stream = _step.value;\n        Utils.stopMediaStream(_stream);\n      }\n\n      if (video.current) {\n        Utils.setVideoSource(video.current, stream);\n      }\n    };\n  }, []);\n  useLoadedVideo(video.current, function () {\n    Utils.syncTrackCapabilities(preferredType, stream, capabilities.current);\n  });\n  return {\n    type: type,\n    mediaTrackSettings: mediaTrackSettings\n  };\n}","map":{"version":3,"mappings":"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","names":["React","Utils","FacingModeToCameraType","VALID_SETTINGS_KEYS","useLoadedVideo","video","onLoaded","useEffect","addEventListener","requestAnimationFrame","useWebCameraStream","preferredType","settings","onCameraReady","onMountError","isStartingCamera","useRef","activeStreams","capabilities","autoFocus","flashMode","whiteBalance","zoom","useState","stream","setStream","mediaTrackSettings","useMemo","getTracks","getSettings","type","facingMode","getStreamDeviceAsync","useCallback","getPreferredStreamDevice","__DEV__","console","warn","nativeEvent","resumeAsync","nextStream","compareStreams","current","some","value","id","push","then","isStarting","catch","changes","Object","keys","key","includes","nextValue","hasChanges","length","nextWebCameraSettings","syncTrackCapabilities","exposureCompensation","colorTemperature","iso","brightness","contrast","saturation","sharpness","focusDistance","setVideoSource","stopMediaStream"],"sourceRoot":"","sources":["../src/useWebCameraStream.ts"],"sourcesContent":["/* eslint-env browser */\nimport * as React from 'react';\n\nimport {\n  CameraReadyListener,\n  CameraType,\n  MountErrorListener,\n  WebCameraSettings,\n} from './Camera.types';\nimport * as Utils from './WebCameraUtils';\nimport { FacingModeToCameraType } from './WebConstants';\n\nconst VALID_SETTINGS_KEYS = [\n  'autoFocus',\n  'flashMode',\n  'exposureCompensation',\n  'colorTemperature',\n  'iso',\n  'brightness',\n  'contrast',\n  'saturation',\n  'sharpness',\n  'focusDistance',\n  'whiteBalance',\n  'zoom',\n];\n\nfunction useLoadedVideo(video: HTMLVideoElement | null, onLoaded: () => void) {\n  React.useEffect(() => {\n    if (video) {\n      video.addEventListener('loadedmetadata', () => {\n        // without this async block the constraints aren't properly applied to the camera,\n        // this means that if you were to turn on the torch and swap to the front camera,\n        // then swap back to the rear camera the torch setting wouldn't be applied.\n        requestAnimationFrame(() => {\n          onLoaded();\n        });\n      });\n    }\n  }, [video]);\n}\n\nexport function useWebCameraStream(\n  video: React.MutableRefObject<HTMLVideoElement | null>,\n  preferredType: CameraType,\n  settings: Record<string, any>,\n  {\n    onCameraReady,\n    onMountError,\n  }: { onCameraReady?: CameraReadyListener; onMountError?: MountErrorListener }\n): {\n  type: CameraType | null;\n  mediaTrackSettings: MediaTrackSettings | null;\n} {\n  const isStartingCamera = React.useRef<boolean | null>(false);\n  const activeStreams = React.useRef<MediaStream[]>([]);\n  const capabilities = React.useRef<WebCameraSettings>({\n    autoFocus: 'continuous',\n    flashMode: 'off',\n    whiteBalance: 'continuous',\n    zoom: 1,\n  });\n  const [stream, setStream] = React.useState<MediaStream | null>(null);\n\n  const mediaTrackSettings = React.useMemo(() => {\n    return stream ? stream.getTracks()[0].getSettings() : null;\n  }, [stream]);\n\n  // The actual camera type - this can be different from the incoming camera type.\n  const type = React.useMemo(() => {\n    if (!mediaTrackSettings) {\n      return null;\n    }\n    // On desktop no value will be returned, in this case we should assume the cameraType is 'front'\n    const { facingMode = 'user' } = mediaTrackSettings;\n    return FacingModeToCameraType[facingMode];\n  }, [mediaTrackSettings]);\n\n  const getStreamDeviceAsync = React.useCallback(async (): Promise<MediaStream | null> => {\n    try {\n      return await Utils.getPreferredStreamDevice(preferredType);\n    } catch (nativeEvent) {\n      if (__DEV__) {\n        console.warn(`Error requesting UserMedia for type \"${preferredType}\":`, nativeEvent);\n      }\n      if (onMountError) {\n        onMountError({ nativeEvent });\n      }\n      return null;\n    }\n  }, [preferredType, onMountError]);\n\n  const resumeAsync = React.useCallback(async (): Promise<boolean> => {\n    const nextStream = await getStreamDeviceAsync();\n    if (Utils.compareStreams(nextStream, stream)) {\n      // Do nothing if the streams are the same.\n      // This happens when the device only supports one camera (i.e. desktop) and the mode was toggled between front/back while already active.\n      // Without this check there is a screen flash while the video switches.\n      return false;\n    }\n\n    // Save a history of all active streams (usually 2+) so we can close them later.\n    // Keeping them open makes swapping camera types much faster.\n    if (!activeStreams.current.some((value) => value.id === nextStream?.id)) {\n      activeStreams.current.push(nextStream!);\n    }\n\n    // Set the new stream -> update the video, settings, and actual camera type.\n    setStream(nextStream);\n    if (onCameraReady) {\n      onCameraReady();\n    }\n    return false;\n  }, [getStreamDeviceAsync, setStream, onCameraReady, stream, activeStreams.current]);\n\n  React.useEffect(() => {\n    // Restart the camera and guard concurrent actions.\n    if (isStartingCamera.current) {\n      return;\n    }\n    isStartingCamera.current = true;\n\n    resumeAsync()\n      .then((isStarting) => {\n        isStartingCamera.current = isStarting;\n      })\n      .catch(() => {\n        // ensure the camera can be started again.\n        isStartingCamera.current = false;\n      });\n  }, [preferredType]);\n\n  // Update the native camera with any custom capabilities.\n  React.useEffect(() => {\n    const changes: WebCameraSettings = {};\n\n    for (const key of Object.keys(settings)) {\n      if (!VALID_SETTINGS_KEYS.includes(key)) {\n        continue;\n      }\n      const nextValue = settings[key];\n      if (nextValue !== capabilities.current[key]) {\n        changes[key] = nextValue;\n      }\n    }\n\n    // Only update the native camera if changes were found\n    const hasChanges = !!Object.keys(changes).length;\n\n    const nextWebCameraSettings = { ...capabilities.current, ...changes };\n    if (hasChanges) {\n      Utils.syncTrackCapabilities(preferredType, stream, changes);\n    }\n\n    capabilities.current = nextWebCameraSettings;\n  }, [\n    settings.autoFocus,\n    settings.flashMode,\n    settings.exposureCompensation,\n    settings.colorTemperature,\n    settings.iso,\n    settings.brightness,\n    settings.contrast,\n    settings.saturation,\n    settings.sharpness,\n    settings.focusDistance,\n    settings.whiteBalance,\n    settings.zoom,\n  ]);\n\n  React.useEffect(() => {\n    // set or unset the video source.\n    if (!video.current) {\n      return;\n    }\n    Utils.setVideoSource(video.current, stream);\n  }, [video.current, stream]);\n\n  React.useEffect(() => {\n    return () => {\n      // Clean up on dismount, this is important for making sure the camera light goes off when the component is removed.\n      for (const stream of activeStreams.current) {\n        // Close all open streams.\n        Utils.stopMediaStream(stream);\n      }\n      if (video.current) {\n        // Invalidate the video source.\n        Utils.setVideoSource(video.current, stream);\n      }\n    };\n  }, []);\n\n  // Update props when the video loads.\n  useLoadedVideo(video.current, () => {\n    Utils.syncTrackCapabilities(preferredType, stream, capabilities.current);\n  });\n\n  return {\n    type,\n    mediaTrackSettings,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}