{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport Style from \"./Style\";\nimport UploadDrafts from \"./UploadDraft\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar ProfileFriends = function (_Component) {\n  _inherits(ProfileFriends, _Component);\n\n  var _super = _createSuper(ProfileFriends);\n\n  function ProfileFriends(props) {\n    var _this;\n\n    _classCallCheck(this, ProfileFriends);\n\n    _this = _super.call(this, props);\n\n    _this.checkLoggedIn = function _callee() {\n      var value;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"@session_token\"));\n\n            case 2:\n              value = _context.sent;\n\n              if (value == null) {\n                _this.props.navigation.navigate(\"Login\");\n              }\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.getFriendList = function _callee2() {\n      var id, value;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              id = _this.state.id;\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"@session_token\"));\n\n            case 3:\n              value = _context2.sent;\n              return _context2.abrupt(\"return\", fetch(\"http://localhost:3333/api/1.0.0/user/\" + id + \"/friends\", {\n                headers: {\n                  \"X-Authorization\": value\n                }\n              }).then(function (response) {\n                if (response.status === 200) {\n                  return response.json();\n                } else if (response.status === 401) {\n                  _this.props.navigation.navigate(\"Login\");\n                } else {\n                  throw \"Something went wrong\";\n                }\n              }).then(function (responseJson) {\n                _this.setState({\n                  FriendList: responseJson,\n                  isLoading: false\n                });\n              }).catch(function (error) {\n                console.log(error);\n              }));\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.state = {\n      isLoading: true,\n      FriendList: [],\n      id: _this.props.route.params.id\n    };\n    return _this;\n  }\n\n  _createClass(ProfileFriends, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.unsubscribe = this.props.navigation.addListener(\"focus\", function () {\n        _this2.checkLoggedIn();\n\n        UploadDrafts.dateCheck();\n\n        _this2.getFriendList();\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.unsubscribe();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      if (this.state.isLoading) {\n        return _jsxs(View, {\n          style: {\n            flex: 1,\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            alignItems: \"center\"\n          },\n          children: [_jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              return _this3.props.navigation.goBack();\n            },\n            style: Style.searchBtn,\n            children: _jsx(Text, {\n              style: Style.searchText,\n              children: \"Back\"\n            })\n          }), _jsx(Text, {\n            children: \"Loading..\"\n          })]\n        });\n      } else {\n        return _jsxs(View, {\n          children: [_jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              return _this3.props.navigation.goBack();\n            },\n            style: Style.searchBtn,\n            children: _jsx(Text, {\n              style: Style.searchText,\n              children: \"Back\"\n            })\n          }), _jsx(Text, {\n            style: Style.titleText,\n            children: \"Friends List\"\n          }), _jsx(FlatList, {\n            data: this.state.FriendList,\n            getChildrenName: function getChildrenName(data) {\n              return \"item\";\n            },\n            renderItem: function renderItem(_ref) {\n              var item = _ref.item;\n              return _jsxs(ScrollView, {\n                children: [_jsx(Text, {}), _jsx(TouchableOpacity, {\n                  onPress: function onPress() {\n                    return _this3.props.navigation.navigate(\"Profile\", {\n                      id: item.user_id\n                    });\n                  },\n                  style: Style.buttonStyleDefault,\n                  children: _jsx(Text, {\n                    style: Style.buttonText,\n                    children: item.user_givenname + \" \" + item.user_familyname\n                  })\n                })]\n              });\n            },\n            keyExtractor: function keyExtractor(item, index) {\n              return item.user_id.toString();\n            }\n          })]\n        });\n      }\n    }\n  }]);\n\n  return ProfileFriends;\n}(Component);\n\nexport default ProfileFriends;","map":{"version":3,"sources":["C:/Users/Ruman/Documents/GitHub/spacebook2/components/ProfileFriends.js"],"names":["React","Component","AsyncStorage","Style","UploadDrafts","ProfileFriends","props","checkLoggedIn","getItem","value","navigation","navigate","getFriendList","id","state","fetch","headers","then","response","status","json","responseJson","setState","FriendList","isLoading","catch","error","console","log","route","params","unsubscribe","addListener","dateCheck","flex","flexDirection","justifyContent","alignItems","goBack","searchBtn","searchText","titleText","data","item","user_id","buttonStyleDefault","buttonText","user_givenname","user_familyname","index","toString"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { ScrollView,View,Text,FlatList,TouchableOpacity } from \"react-native\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport Style from \"./Style\";\r\nimport UploadDrafts from \"./UploadDraft\";\r\n\r\nclass ProfileFriends extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: true,\r\n      FriendList: [],\r\n      id: this.props.route.params.id,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.unsubscribe = this.props.navigation.addListener(\"focus\", () => {\r\n      this.checkLoggedIn();\r\n      UploadDrafts.dateCheck();\r\n      this.getFriendList();\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.unsubscribe();\r\n  }\r\n\r\n  checkLoggedIn = async () => {\r\n    const value = await AsyncStorage.getItem(\"@session_token\");\r\n    //console.log(value)\r\n\r\n    if (value == null) {\r\n      this.props.navigation.navigate(\"Login\");\r\n    }\r\n  };\r\n\r\n  getFriendList = async () => {\r\n    let id = this.state.id;\r\n    const value = await AsyncStorage.getItem(\"@session_token\");\r\n\r\n    return fetch(\"http://localhost:3333/api/1.0.0/user/\" + id + \"/friends\", {\r\n      headers: {\r\n        \"X-Authorization\": value,\r\n      },\r\n    })\r\n      .then((response) => {\r\n        if (response.status === 200) {\r\n          return response.json();\r\n        } else if (response.status === 401) {\r\n          this.props.navigation.navigate(\"Login\");\r\n        } else {\r\n          throw \"Something went wrong\";\r\n        }\r\n      })\r\n      .then((responseJson) => {\r\n        this.setState({\r\n          FriendList: responseJson,\r\n          isLoading: false,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    if (this.state.isLoading) {\r\n      return (\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <TouchableOpacity\r\n            onPress={() => this.props.navigation.goBack()}\r\n            style={Style.searchBtn}\r\n          >\r\n            <Text style={Style.searchText}>Back</Text>\r\n          </TouchableOpacity>\r\n\r\n          <Text>Loading..</Text>\r\n        </View>\r\n      );\r\n    } else {\r\n      return (\r\n        <View>\r\n          <TouchableOpacity\r\n            onPress={() => this.props.navigation.goBack()}\r\n            style={Style.searchBtn}\r\n          >\r\n            <Text style={Style.searchText}>Back</Text>\r\n          </TouchableOpacity>\r\n\r\n          <Text style={Style.titleText}>Friends List</Text>\r\n          <FlatList\r\n            data={this.state.FriendList}\r\n            getChildrenName={(data) => \"item\"}\r\n            renderItem={({ item }) => (\r\n              <ScrollView>\r\n                <Text></Text>\r\n                <TouchableOpacity\r\n                  onPress={() =>\r\n                    this.props.navigation.navigate(\"Profile\", {\r\n                      id: item.user_id,\r\n                    })\r\n                  }\r\n                  style={Style.buttonStyleDefault}\r\n                >\r\n                  <Text style={Style.buttonText}>\r\n                    {item.user_givenname + \" \" + item.user_familyname}\r\n                  </Text>\r\n                </TouchableOpacity>\r\n              </ScrollView>\r\n            )}\r\n            keyExtractor={(item, index) => item.user_id.toString()}\r\n          />\r\n        </View>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default ProfileFriends;\r\n"]},"metadata":{},"sourceType":"module"}