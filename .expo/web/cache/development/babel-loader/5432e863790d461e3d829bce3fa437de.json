{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { NavigationActions } from \"react-navigation\";\nimport Style from \"./Style\";\nimport UploadDrafts from \"./UploadDraft\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Profile = function (_Component) {\n  _inherits(Profile, _Component);\n\n  var _super = _createSuper(Profile);\n\n  function Profile(props) {\n    var _this;\n\n    _classCallCheck(this, Profile);\n\n    _this = _super.call(this, props);\n\n    _this.checkLoggedIn = function _callee() {\n      var value;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"@session_token\"));\n\n            case 2:\n              value = _context.sent;\n\n              if (value == null) {\n                _this.props.navigation.navigate(\"Login\");\n              }\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.userCheck = function _callee2() {\n      var my_id, id;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"@id\"));\n\n            case 2:\n              my_id = _context2.sent;\n\n              _this.setState({\n                LoggedID: my_id\n              });\n\n              try {\n                id = _this.props.route.params.id;\n                console.log(\"someone elses profile (IGNORE)\");\n\n                _this.setState({\n                  id: id\n                });\n              } catch (error) {\n                console.log(\"this is my own profile (IGNORE)\");\n\n                _this.setState({\n                  Freinds: true\n                });\n\n                _this.setState({\n                  id: my_id\n                });\n              }\n\n              _this.getFriendList();\n\n              _this.ProfilePic();\n\n              _this.loadPosts();\n\n              _this.getUser();\n\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.getUser = function _callee3() {\n      var id, value;\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              id = _this.state.id;\n              _context3.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"@session_token\"));\n\n            case 3:\n              value = _context3.sent;\n              return _context3.abrupt(\"return\", fetch(\"http://localhost:3333/api/1.0.0/user/\" + id, {\n                headers: {\n                  \"X-Authorization\": value\n                }\n              }).then(function (response) {\n                if (response.status === 200) {\n                  return response.json();\n                } else if (response.status === 401) {\n                  _this.props.navigation.navigate(\"Login\");\n                } else {\n                  throw \"Something went wrong\";\n                }\n              }).then(function (responseJson) {\n                _this.setState({\n                  User: responseJson\n                });\n              }).catch(function (error) {\n                console.log(error, \"user data\");\n              }));\n\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.getFriendList = function _callee4() {\n      var id, value;\n      return _regeneratorRuntime.async(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              id = _this.state.id;\n              _context4.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"@session_token\"));\n\n            case 3:\n              value = _context4.sent;\n              return _context4.abrupt(\"return\", fetch(\"http://localhost:3333/api/1.0.0/user/\" + id + \"/friends\", {\n                headers: {\n                  \"X-Authorization\": value\n                }\n              }).then(function (response) {\n                if (response.status === 200) {\n                  _this.setState({\n                    Freinds: true,\n                    FriendList: response.json()\n                  });\n                } else if (response.status === 401) {\n                  _this.props.navigation.navigate(\"Login\");\n                } else if (response.status == 403) {\n                  _this.setState({\n                    Freinds: false\n                  });\n\n                  _this.FreindStatus();\n                } else {\n                  throw \"Something went wrong\";\n                }\n              }).catch(function (error) {\n                console.log(error);\n              }));\n\n            case 5:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.FreindStatus = function _callee5() {\n      var id, value;\n      return _regeneratorRuntime.async(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              id = _this.state.id;\n              _context5.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"@session_token\"));\n\n            case 3:\n              value = _context5.sent;\n              return _context5.abrupt(\"return\", fetch(\"http://localhost:3333/api/1.0.0/friendrequests\", {\n                headers: {\n                  \"X-Authorization\": value\n                }\n              }).then(function (response) {\n                if (response.status === 200) {\n                  return response.json();\n                } else if (response.status === 401) {\n                  _this.props.navigation.navigate(\"Login\");\n                } else {\n                  throw \"Something went wrong\";\n                }\n              }).then(function (responseJson) {\n                if (responseJson.length == 0) {\n                  _this.setState({\n                    Type: \"add\",\n                    isLoading: false\n                  });\n                }\n\n                for (var i = 0; i < responseJson.length; i++) {\n                  if (responseJson[i].user_id == id) {\n                    _this.setState({\n                      Type: \"accept\",\n                      isLoading: false\n                    });\n                  } else {\n                    _this.setState({\n                      Type: \"add\",\n                      isLoading: false\n                    });\n                  }\n                }\n              }).catch(function (error) {\n                console.log(error);\n              }));\n\n            case 5:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.addFreind = function _callee6() {\n      var id, value;\n      return _regeneratorRuntime.async(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              id = _this.state.id;\n              _context6.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"@session_token\"));\n\n            case 3:\n              value = _context6.sent;\n              return _context6.abrupt(\"return\", fetch(\"http://localhost:3333/api/1.0.0/user/\" + id + \"/friends\", {\n                method: \"POST\",\n                headers: {\n                  \"X-Authorization\": value\n                }\n              }).then(function (response) {\n                if (response.status === 200) {\n                  _this.setState({\n                    falseText: \"Freind Request Sent!\"\n                  });\n\n                  _this.FreindStatus;\n                } else if (response.status === 401) {\n                  return response.json();\n                } else if (response.status == 403) {\n                  _this.setState({\n                    falseText: \"Freind Request Already Sent!\"\n                  });\n                } else {\n                  throw \"Something went wrong\";\n                }\n              }).then(function (responseJson) {\n                console.log(responseJson);\n              }).catch(function (error) {\n                console.log(error);\n              }));\n\n            case 5:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.FreindButtonStatus = function (data) {\n      data = String(data);\n\n      if (data == \"add\") {\n        return _jsxs(View, {\n          children: [_jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              return _this.addFreind();\n            },\n            style: Style.buttonStyleDefault,\n            children: _jsx(Text, {\n              style: Style.buttonText,\n              children: \"Add Freind\"\n            })\n          }), _jsx(Text, {\n            children: _this.state.falseText\n          })]\n        });\n      } else if (data == \"accept\") {\n        return _jsxs(View, {\n          children: [_jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              return _this.AcceptReq();\n            },\n            style: Style.AcceptButton,\n            children: _jsx(Text, {\n              style: Style.AcceptText,\n              children: \"Accept\"\n            })\n          }), _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              return _this.DeclineReq();\n            },\n            style: Style.DeclineButton,\n            children: _jsx(Text, {\n              style: Style.DeclineText,\n              children: \"Decline\"\n            })\n          })]\n        });\n      }\n    };\n\n    _this.AcceptReq = function _callee7() {\n      var id, value;\n      return _regeneratorRuntime.async(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              id = _this.state.id;\n              _context7.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"@session_token\"));\n\n            case 3:\n              value = _context7.sent;\n              return _context7.abrupt(\"return\", fetch(\"http://localhost:3333/api/1.0.0/friendrequests/\" + id, {\n                method: \"POST\",\n                headers: {\n                  \"X-Authorization\": value\n                }\n              }).then(function (response) {\n                if (response.status === 200) {\n                  _this.getFriendList();\n\n                  _this.forceUpdate();\n\n                  return response.json();\n                } else if (response.status === 401) {\n                  _this.getFriendList();\n\n                  _this.forceUpdate();\n\n                  return response.json();\n                } else {\n                  throw \"Something went wrong\";\n                }\n              }).then(function (responseJson) {\n                _this.getFriendList();\n\n                _this.forceUpdate();\n              }).catch(function (error) {\n                console.log(error, \"Accept Failed\");\n              }));\n\n            case 5:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.DeclineReq = function _callee8() {\n      var id, value;\n      return _regeneratorRuntime.async(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              id = _this.state.id;\n              _context8.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"@session_token\"));\n\n            case 3:\n              value = _context8.sent;\n              return _context8.abrupt(\"return\", fetch(\"http://localhost:3333/api/1.0.0/friendrequests/\" + id, {\n                method: \"DELETE\",\n                headers: {\n                  \"X-Authorization\": value\n                }\n              }).then(function (response) {\n                if (response.status === 200) {\n                  _this.getFriendList();\n\n                  _this.forceUpdate();\n                } else if (response.status === 401) {\n                  _this.getFriendList();\n\n                  _this.forceUpdate();\n\n                  return response.json();\n                } else {\n                  throw \"Something went wrong\";\n                }\n              }).then(function (responseJson) {\n                _this.getFriendList();\n\n                _this.forceUpdate();\n              }).catch(function (error) {\n                console.log(error);\n              }));\n\n            case 5:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.loadPosts = function _callee9() {\n      var id, value;\n      return _regeneratorRuntime.async(function _callee9$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              id = _this.state.id;\n              _context9.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"@session_token\"));\n\n            case 3:\n              value = _context9.sent;\n              return _context9.abrupt(\"return\", fetch(\"http://localhost:3333/api/1.0.0/user/\" + id + \"/post\", {\n                headers: {\n                  \"X-Authorization\": value\n                }\n              }).then(function (response) {\n                if (response.status === 200) {\n                  return response.json();\n                } else if (response.status === 401) {\n                  _this.props.navigation.navigate(\"Login\");\n                } else if (response.status == 304) {\n                  return response.json();\n                } else {\n                  throw \"Something went wrong\";\n                }\n              }).then(function (responseJson) {\n                if (responseJson == \"\") {\n                  _this.setState({\n                    Posts: [],\n                    isLoading: false\n                  });\n\n                  _this.setState({\n                    TextError: \"No Posts Available\"\n                  });\n                } else if (responseJson != \"\") {\n                  _this.setState({\n                    Posts: responseJson,\n                    isLoading: false\n                  });\n                }\n              }).catch(function (error) {\n                console.log(error);\n              }));\n\n            case 5:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.DeletePost = function _callee10(Post_id) {\n      var value, id;\n      return _regeneratorRuntime.async(function _callee10$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              _context10.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"@session_token\"));\n\n            case 2:\n              value = _context10.sent;\n              id = _this.state.id;\n              return _context10.abrupt(\"return\", fetch(\"http://localhost:3333/api/1.0.0/user/\" + id + \"/post/\" + Post_id, {\n                method: \"DELETE\",\n                headers: {\n                  \"X-Authorization\": value\n                }\n              }).then(function (response) {\n                if (response.status === 200) {\n                  _this.setState({\n                    PostText: \"Post Deleted\"\n                  });\n\n                  _this.loadPosts();\n                } else if (response.status === 401) {\n                  return response.json();\n                } else {\n                  throw \"Something went wrong\";\n                }\n              }).then(function (responseJson) {\n                console.log(responseJson);\n              }).catch(function (error) {\n                console.log(error);\n              }));\n\n            case 5:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.AddPost = function _callee11() {\n      var value, id;\n      return _regeneratorRuntime.async(function _callee11$(_context11) {\n        while (1) {\n          switch (_context11.prev = _context11.next) {\n            case 0:\n              _context11.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"@session_token\"));\n\n            case 2:\n              value = _context11.sent;\n              id = _this.state.id;\n\n              if (!(_this.state.text == \"\")) {\n                _context11.next = 6;\n                break;\n              }\n\n              return _context11.abrupt(\"return\", _this.setState({\n                TextError: \"Please Enter Text\"\n              }));\n\n            case 6:\n              return _context11.abrupt(\"return\", fetch(\"http://localhost:3333/api/1.0.0/user/\" + id + \"/post\", {\n                method: \"POST\",\n                headers: {\n                  \"Content-Type\": \"application/json\",\n                  \"X-Authorization\": value\n                },\n                body: JSON.stringify({\n                  text: _this.state.text\n                })\n              }).then(function (response) {\n                if (response.status === 200) {\n                  return response.json();\n                } else if (response.status === 401) {\n                  return response.json();\n                } else if (response.status === 201) {\n                  _this.setState({\n                    falseText: \"Post Uploaded!\"\n                  });\n\n                  _this.loadPosts();\n                } else {\n                  throw \"Something went wrong\";\n                }\n              }).then(function (responseJson) {\n                console.log(responseJson);\n              }).catch(function (error) {\n                console.log(error);\n              }));\n\n            case 7:\n            case \"end\":\n              return _context11.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.LikePost = function _callee12(item) {\n      var value, id, post_id;\n      return _regeneratorRuntime.async(function _callee12$(_context12) {\n        while (1) {\n          switch (_context12.prev = _context12.next) {\n            case 0:\n              _context12.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"@session_token\"));\n\n            case 2:\n              value = _context12.sent;\n              id = item.author.user_id;\n              post_id = item.post_id;\n              return _context12.abrupt(\"return\", fetch(\"http://localhost:3333/api/1.0.0/user/\" + id + \"/post/\" + post_id + \"/like\", {\n                method: \"POST\",\n                headers: {\n                  \"Content-Type\": \"application/json\",\n                  \"X-Authorization\": value\n                }\n              }).then(function (response) {\n                if (response.status === 200) {\n                  _this.loadPosts();\n\n                  return response.json();\n                } else if (response.status === 401) {\n                  return response.json();\n                } else if (response.status == 403) {\n                  _this.setState({\n                    PostText: \"Already Liked This Post\"\n                  });\n                } else if (response.status == 404) {\n                  _this.setState({\n                    PostText: \"Cant Like Posts On Your Own Profile!\"\n                  });\n                } else {\n                  throw \"Something went wrong\";\n                }\n              }).then(function (responseJson) {}).catch(function (error) {\n                console.log(error);\n              }));\n\n            case 6:\n            case \"end\":\n              return _context12.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.UnlikePost = function _callee13(item) {\n      var value, id, post_id;\n      return _regeneratorRuntime.async(function _callee13$(_context13) {\n        while (1) {\n          switch (_context13.prev = _context13.next) {\n            case 0:\n              _context13.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"@session_token\"));\n\n            case 2:\n              value = _context13.sent;\n              id = item.author.user_id;\n              post_id = item.post_id;\n              return _context13.abrupt(\"return\", fetch(\"http://localhost:3333/api/1.0.0/user/\" + id + \"/post/\" + post_id + \"/like\", {\n                method: \"DELETE\",\n                headers: {\n                  \"Content-Type\": \"application/json\",\n                  \"X-Authorization\": value\n                }\n              }).then(function (response) {\n                if (response.status === 200) {\n                  _this.loadPosts();\n\n                  return response.json();\n                } else if (response.status === 401) {\n                  return response.json();\n                } else if (response.status == 403) {\n                  _this.setState({\n                    PostText: \"You Havent Liked This Post\"\n                  });\n                } else if (response.status == 404) {\n                  _this.setState({\n                    PostText: \"Cant Remove Like Posts On Your Own Profile!\"\n                  });\n                } else {\n                  throw \"Something went wrong\";\n                }\n              }).then(function (responseJson) {\n                _this.setState({\n                  like: \"like\"\n                });\n              }).catch(function (error) {\n                console.log(error);\n              }));\n\n            case 6:\n            case \"end\":\n              return _context13.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.ProfilePic = function _callee14() {\n      var value, id;\n      return _regeneratorRuntime.async(function _callee14$(_context14) {\n        while (1) {\n          switch (_context14.prev = _context14.next) {\n            case 0:\n              _context14.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"@session_token\"));\n\n            case 2:\n              value = _context14.sent;\n              id = _this.state.id;\n              return _context14.abrupt(\"return\", fetch(\"http://localhost:3333/api/1.0.0/user/\" + id + \"/photo\", {\n                method: \"GET\",\n                headers: {\n                  \"X-Authorization\": value\n                }\n              }).then(function (res) {\n                return res.blob();\n              }).then(function (resBlob) {\n                var data = URL.createObjectURL(resBlob);\n\n                _this.setState({\n                  photo: data\n                });\n              }).catch(function (error) {\n                console.log(error);\n              }));\n\n            case 5:\n            case \"end\":\n              return _context14.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.SaveDraft = function _callee15() {\n      var draft, prev;\n      return _regeneratorRuntime.async(function _callee15$(_context15) {\n        while (1) {\n          switch (_context15.prev = _context15.next) {\n            case 0:\n              draft = {\n                id: String(_this.state.LoggedID),\n                text: String(_this.state.text),\n                date: null\n              };\n\n              if (!(draft.text == \"\")) {\n                _context15.next = 3;\n                break;\n              }\n\n              return _context15.abrupt(\"return\", _this.setState({\n                TextError: \"No Text Has Been Inputted\"\n              }));\n\n            case 3:\n              prev = [];\n              _context15.next = 6;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"draftStore\").then(function (prev) {\n                if (prev == null) {\n                  var newArr = [];\n                  newArr.push(draft);\n                  AsyncStorage.setItem(\"draftStore\", JSON.stringify(newArr));\n                } else {\n                  var newArr2 = JSON.parse(prev);\n                  newArr2.push(draft);\n                  AsyncStorage.setItem(\"draftStore\", JSON.stringify(newArr2));\n                }\n              }));\n\n            case 6:\n              _this.setState({\n                TextError: \"Draft Saved!\"\n              });\n\n            case 7:\n            case \"end\":\n              return _context15.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.DateGet = function (time) {\n      var postDate = new Date(time);\n      var curDate = new Date();\n      var diff = Math.abs(curDate - postDate);\n      var diffDays = Math.ceil(diff / (1000 * 60 * 60 * 24));\n\n      if (diffDays <= 1) {\n        var hours = Math.ceil(diff / (1000 * 60 * 60));\n\n        if (hours <= 1) {\n          return Math.ceil(diff / (1000 * 60)) + \" Min Ago\";\n        } else {\n          return Math.ceil(diff / (1000 * 60 * 60)) + \" Hours Ago\";\n        }\n      } else if (diffDays > 1) {\n        return diffDays + \" Days Ago\";\n      } else if (diffDays > 30) {\n        return postDate.toLocaleDateString(\"en-GB\");\n      }\n    };\n\n    _this.state = {\n      Type: \"\",\n      User: [],\n      FriendList: [],\n      Freinds: null,\n      id: \"\",\n      LoggedID: \"\",\n      Posts: [],\n      text: \"\",\n      isLoading: true,\n      myPost: null,\n      photo: null,\n      TextError: \"\",\n      falseText: \"\",\n      PostText: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(Profile, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      return _regeneratorRuntime.async(function componentDidMount$(_context16) {\n        while (1) {\n          switch (_context16.prev = _context16.next) {\n            case 0:\n              this.unsubscribe = this.props.navigation.addListener(\"focus\", function () {\n                _this2.checkLoggedIn();\n\n                UploadDrafts.dateCheck();\n\n                try {\n                  _this2.setState({\n                    isLoading: true\n                  });\n\n                  _this2.setState({\n                    Posts: []\n                  });\n\n                  _this2.setState({\n                    Freinds: null\n                  });\n\n                  _this2.setState({\n                    Type: \"\"\n                  });\n\n                  _this2.setState({\n                    PostText: \"\"\n                  });\n\n                  _this2.setState({\n                    falseText: \"\"\n                  });\n                } catch (e) {\n                  console.log(e);\n                }\n\n                _this2.userCheck();\n              });\n\n            case 1:\n            case \"end\":\n              return _context16.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      return _regeneratorRuntime.async(function componentWillUnmount$(_context17) {\n        while (1) {\n          switch (_context17.prev = _context17.next) {\n            case 0:\n              this.unsubscribe();\n\n            case 1:\n            case \"end\":\n              return _context17.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      if (this.state.isLoading) {\n        return _jsx(View, {\n          style: Style.centerText,\n          children: _jsx(Text, {\n            children: \"Loading...\"\n          })\n        });\n      } else {\n        if (this.state.Freinds == false) {\n          return _jsxs(View, {\n            style: Style.centerText,\n            children: [_jsx(Image, {\n              source: {\n                uri: this.state.photo\n              },\n              style: {\n                height: 100,\n                width: 100,\n                borderRadius: 50\n              }\n            }), _jsxs(Text, {\n              style: Style.titleText,\n              children: [this.state.User.first_name, \" \", this.state.User.last_name, \" \"]\n            }), _jsx(Text, {\n              children: this.FreindButtonStatus(this.state.Type)\n            })]\n          });\n        } else {\n          return _jsxs(ScrollView, {\n            children: [_jsxs(View, {\n              style: {\n                justifyContent: \"center\",\n                alignItems: \"center\"\n              },\n              children: [_jsx(Image, {\n                source: {\n                  uri: this.state.photo\n                },\n                style: {\n                  marginTop: 50,\n                  marginBottom: 15,\n                  height: 100,\n                  width: 100,\n                  borderRadius: 50\n                }\n              }), _jsxs(Text, {\n                style: Style.titleText,\n                children: [this.state.User.first_name, \" \", this.state.User.last_name, \" \"]\n              })]\n            }), _jsx(TextInput, {\n              placeholder: \"Type New Post Here...\",\n              onChangeText: function onChangeText(text) {\n                return _this3.setState({\n                  text: text\n                });\n              },\n              value: this.state.text,\n              style: Style.inputBox\n            }), _jsx(Text, {\n              style: Style.errorText,\n              children: this.state.TextError\n            }), _jsxs(View, {\n              style: {\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                padding: 15\n              },\n              children: [_jsx(TouchableOpacity, {\n                onPress: function onPress() {\n                  _this3.AddPost();\n                },\n                style: Style.homeButton,\n                children: _jsx(Text, {\n                  style: {\n                    color: \"white\"\n                  },\n                  children: \"Upload Post\"\n                })\n              }), this.state.id == this.state.LoggedID && _jsx(TouchableOpacity, {\n                onPress: function onPress() {\n                  _this3.SaveDraft();\n                },\n                style: Style.homeButton,\n                children: _jsx(Text, {\n                  style: Style.buttonText,\n                  children: \"Save Draft\"\n                })\n              }), this.state.id == this.state.LoggedID && _jsx(TouchableOpacity, {\n                onPress: function onPress() {\n                  return _this3.props.navigation.navigate(\"ViewDrafts\");\n                },\n                style: Style.homeButton,\n                children: _jsx(Text, {\n                  style: Style.buttonText,\n                  children: \"View Drafts\"\n                })\n              })]\n            }), _jsx(TouchableOpacity, {\n              onPress: function onPress() {\n                return _this3.props.navigation.navigate(\"ProfileFriends\", {\n                  id: _this3.state.id\n                });\n              },\n              style: Style.buttonStyleDefault,\n              children: _jsx(Text, {\n                style: Style.buttonText,\n                children: \"View Freinds List\"\n              })\n            }), _jsx(Text, {\n              style: Style.errorText,\n              children: this.state.PostText\n            }), _jsx(FlatList, {\n              contentContainerStyle: {\n                paddingLeft: 15,\n                paddingRight: 15,\n                marginBottom: 20\n              },\n              data: this.state.Posts,\n              renderItem: function renderItem(_ref) {\n                var item = _ref.item;\n                return _jsxs(ScrollView, {\n                  style: {\n                    backgroundColor: \"white\",\n                    borderRadius: 15,\n                    marginTop: 20\n                  },\n                  children: [_jsxs(View, {\n                    style: {\n                      flexDirection: \"row\",\n                      justifyContent: \"space-between\",\n                      paddingTop: 20\n                    },\n                    children: [_jsx(Text, {\n                      style: {\n                        color: \"grey\",\n                        fontWeight: \"bold\",\n                        fontSize: 15,\n                        paddingLeft: 10\n                      },\n                      children: item.author.first_name + \" \" + item.author.last_name + \"\\n\" + _this3.DateGet(item.timestamp)\n                    }), _this3.state.LoggedID == item.author.user_id && _jsxs(View, {\n                      style: {\n                        flexDirection: \"row\",\n                        justifyContent: \"flex-end\"\n                      },\n                      children: [_jsx(View, {\n                        children: _jsx(TouchableOpacity, {\n                          style: {\n                            backgroundColor: \"white\"\n                          },\n                          onPress: function onPress() {\n                            return _this3.props.navigation.navigate(\"Post\", {\n                              item: item,\n                              id: _this3.state.id\n                            });\n                          },\n                          children: _jsx(Text, {\n                            style: {\n                              color: \"black\",\n                              fontWeight: \"700\",\n                              paddingRight: 20,\n                              paddingLeft: 20\n                            },\n                            children: \"Edit\"\n                          })\n                        })\n                      }), _jsx(View, {\n                        children: _jsx(TouchableOpacity, {\n                          style: {\n                            backgroundColor: \"white\"\n                          },\n                          onPress: function onPress() {\n                            return _this3.DeletePost(item.post_id);\n                          },\n                          children: _jsx(Text, {\n                            style: {\n                              color: \"red\",\n                              fontWeight: \"700\",\n                              paddingRight: 20\n                            },\n                            children: \"Delete\"\n                          })\n                        })\n                      })]\n                    })]\n                  }), _jsx(TouchableOpacity, {\n                    style: {\n                      backgroundColor: \"white\"\n                    },\n                    onPress: function onPress() {\n                      return _this3.props.navigation.navigate(\"ViewPost\", {\n                        items: item,\n                        id: _this3.state.id\n                      });\n                    },\n                    children: _jsx(Text, {\n                      style: {\n                        color: \"black\",\n                        paddingLeft: 20,\n                        paddingRight: 20,\n                        paddingBottom: 20,\n                        paddingTop: 20\n                      },\n                      children: item.text\n                    })\n                  }), _this3.state.LoggedID != item.author.user_id && _jsxs(View, {\n                    style: {\n                      flexDirection: \"row\"\n                    },\n                    children: [_jsx(View, {\n                      children: _jsx(TouchableOpacity, {\n                        style: {\n                          backgroundColor: \"white\"\n                        },\n                        onPress: function onPress() {\n                          _this3.LikePost(item);\n                        },\n                        children: _jsxs(Text, {\n                          style: {\n                            color: \"green\",\n                            paddingLeft: 20,\n                            paddingRight: 20,\n                            paddingBottom: 20,\n                            paddingTop: 20\n                          },\n                          children: [\"Like \", item.numLikes]\n                        })\n                      })\n                    }), _jsx(View, {\n                      children: _jsx(TouchableOpacity, {\n                        style: {\n                          backgroundColor: \"white\"\n                        },\n                        title: \"Remove Like\",\n                        onPress: function onPress() {\n                          _this3.UnlikePost(item);\n                        },\n                        children: _jsx(Text, {\n                          style: {\n                            color: \"red\",\n                            paddingLeft: 20,\n                            paddingRight: 20,\n                            paddingBottom: 20,\n                            paddingTop: 20\n                          },\n                          children: \"Remove Like\"\n                        })\n                      })\n                    })]\n                  })]\n                });\n              },\n              keyExtractor: function keyExtractor(item, index) {\n                return item.author.user_id.toString();\n              }\n            })]\n          });\n        }\n      }\n    }\n  }]);\n\n  return Profile;\n}(Component);\n\nexport default Profile;","map":{"version":3,"sources":["C:/Users/Ruman/Documents/GitHub/spacebook2/components/Profile.js"],"names":["React","Component","AsyncStorage","NavigationActions","Style","UploadDrafts","Profile","props","checkLoggedIn","getItem","value","navigation","navigate","userCheck","my_id","setState","LoggedID","id","route","params","console","log","error","Freinds","getFriendList","ProfilePic","loadPosts","getUser","state","fetch","headers","then","response","status","json","responseJson","User","catch","FriendList","FreindStatus","length","Type","isLoading","i","user_id","addFreind","method","falseText","FreindButtonStatus","data","String","buttonStyleDefault","buttonText","AcceptReq","AcceptButton","AcceptText","DeclineReq","DeclineButton","DeclineText","forceUpdate","Posts","TextError","DeletePost","Post_id","PostText","AddPost","text","body","JSON","stringify","LikePost","item","author","post_id","UnlikePost","like","res","blob","resBlob","URL","createObjectURL","photo","SaveDraft","draft","date","prev","newArr","push","setItem","newArr2","parse","DateGet","time","postDate","Date","curDate","diff","Math","abs","diffDays","ceil","hours","toLocaleDateString","myPost","unsubscribe","addListener","dateCheck","e","centerText","uri","height","width","borderRadius","titleText","first_name","last_name","justifyContent","alignItems","marginTop","marginBottom","inputBox","errorText","flexDirection","padding","homeButton","color","paddingLeft","paddingRight","backgroundColor","paddingTop","fontWeight","fontSize","timestamp","items","paddingBottom","numLikes","index","toString"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { View,Text,FlatList,ScrollView,TextInput,TouchableOpacity,Image } from \"react-native\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { NavigationActions } from \"react-navigation\";\r\nimport Style from \"./Style\";\r\nimport UploadDrafts from \"./UploadDraft\";\r\n\r\nclass Profile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      Type: \"\",\r\n      User: [],\r\n      FriendList: [],\r\n      Freinds: null,\r\n      id: \"\",\r\n      LoggedID: \"\",\r\n      Posts: [],\r\n      text: \"\",\r\n      isLoading: true,\r\n      myPost: null,\r\n      photo: null,\r\n      TextError: \"\",\r\n      falseText: \"\",\r\n      PostText: \"\",\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    this.unsubscribe = this.props.navigation.addListener(\"focus\", () => {\r\n      this.checkLoggedIn();\r\n      UploadDrafts.dateCheck();\r\n      //\"forground\" draft upload date function called at each screen\r\n\r\n      try {\r\n        this.setState({ isLoading: true });\r\n        this.setState({ Posts: [] });\r\n        this.setState({ Freinds: null });\r\n        this.setState({ Type: \"\" });\r\n        this.setState({PostText:\"\"})\r\n        this.setState({falseText: \"\"})\r\n        // this will reset all the states back if the user has gone to a diffrent screen and tried to go back\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n\r\n      this.userCheck();\r\n      //this function is respnsible to see whos profile you are looking at (either your own or someone elses)\r\n    });\r\n  }\r\n  async componentWillUnmount() {\r\n    this.unsubscribe();\r\n  }\r\n  checkLoggedIn = async () => {\r\n    const value = await AsyncStorage.getItem(\"@session_token\");\r\n\r\n    if (value == null) {\r\n      this.props.navigation.navigate(\"Login\");\r\n    }\r\n  };\r\n  userCheck = async () => {\r\n    const my_id = await AsyncStorage.getItem(\"@id\");\r\n    this.setState({ LoggedID: my_id });\r\n\r\n    try {\r\n      const id = this.props.route.params.id;\r\n      //checks if you clicked on someones profile by getting the param passed in \r\n      //this will error if not avaliable so used a try/catch instead of if\r\n      console.log(\"someone elses profile (IGNORE)\");\r\n      this.setState({ id: id });\r\n\r\n    } catch (error) {\r\n      console.log(\"this is my own profile (IGNORE)\");\r\n      this.setState({ Freinds: true });\r\n      this.setState({ id: my_id });\r\n    }\r\n\r\n    this.getFriendList();\r\n    this.ProfilePic();\r\n    this.loadPosts();\r\n    this.getUser();\r\n    //loads all of the pages items no matter whos profile\r\n    \r\n\r\n  };\r\n  getUser = async () => {\r\n\r\n    const id = this.state.id;\r\n    const value = await AsyncStorage.getItem(\"@session_token\");\r\n\r\n    return fetch(\"http://localhost:3333/api/1.0.0/user/\" + id, {\r\n      headers: {\r\n        \"X-Authorization\": value,\r\n      },\r\n    })\r\n      .then((response) => {\r\n        if (response.status === 200) {\r\n          return response.json();\r\n        } else if (response.status === 401) {\r\n          this.props.navigation.navigate(\"Login\");\r\n        } else {\r\n          throw \"Something went wrong\";\r\n        }\r\n      })\r\n      .then((responseJson) => {\r\n        this.setState({\r\n          User: responseJson,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error, \"user data\");\r\n      });\r\n  };\r\n  getFriendList = async () => {\r\n    const id = this.state.id;\r\n    const value = await AsyncStorage.getItem(\"@session_token\");\r\n\r\n    return fetch(\"http://localhost:3333/api/1.0.0/user/\" + id + \"/friends\", {\r\n      headers: {\r\n        \"X-Authorization\": value,\r\n      },\r\n    })\r\n      .then((response) => {\r\n        if (response.status === 200) {\r\n          this.setState({\r\n            Freinds: true,\r\n            FriendList: response.json(),\r\n          });\r\n        } else if (response.status === 401) {\r\n          this.props.navigation.navigate(\"Login\");\r\n        } else if (response.status == 403) {\r\n          this.setState({\r\n            Freinds: false\r\n          });\r\n          this.FreindStatus();\r\n          // Due to not being freinds with the user a function is called to see if they have sent a freinq request\r\n        } else {\r\n          throw \"Something went wrong\";\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  FreindStatus = async () => {\r\n    const id = this.state.id;\r\n\r\n    const value = await AsyncStorage.getItem(\"@session_token\");\r\n\r\n    return fetch(\"http://localhost:3333/api/1.0.0/friendrequests\", {\r\n      headers: {\r\n        \"X-Authorization\": value,\r\n      },\r\n    })\r\n      .then((response) => {\r\n        if (response.status === 200) {\r\n          return response.json();\r\n        } else if (response.status === 401) {\r\n          this.props.navigation.navigate(\"Login\");\r\n        } else {\r\n          throw \"Something went wrong\";\r\n        }\r\n      })\r\n      .then((responseJson) => {\r\n\r\n        if (responseJson.length == 0) {\r\n          this.setState({\r\n            Type: \"add\",\r\n            isLoading: false\r\n          });\r\n        }\r\n\r\n        for (let i = 0; i < responseJson.length; i++) {\r\n          if (responseJson[i].user_id == id) {\r\n            this.setState({\r\n              Type: \"accept\",\r\n              isLoading: false\r\n            });\r\n          } else {\r\n            this.setState({\r\n              Type: \"add\",\r\n              isLoading: false\r\n            });\r\n          }\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  addFreind = async () => {\r\n\r\n    const id = this.state.id;\r\n    const value = await AsyncStorage.getItem(\"@session_token\");\r\n\r\n    return fetch(\"http://localhost:3333/api/1.0.0/user/\" + id + \"/friends\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"X-Authorization\": value,\r\n      },\r\n    })\r\n      .then((response) => {\r\n        if (response.status === 200) {\r\n          this.setState({ falseText: \"Freind Request Sent!\" });\r\n          this.FreindStatus;\r\n        } else if (response.status === 401) {\r\n          return response.json();\r\n        } else if (response.status == 403) {\r\n          this.setState({ falseText: \"Freind Request Already Sent!\" });\r\n        } else {\r\n          throw \"Something went wrong\";\r\n        }\r\n      })\r\n      .then((responseJson) => {\r\n        console.log(responseJson);\r\n\r\n      })\r\n\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  FreindButtonStatus = (data) => {\r\n    //this is used to load the diffrent states of the button to ensure the correct one is displayed\r\n    data = String(data);\r\n\r\n    if (data == \"add\") {\r\n      return (\r\n        <View>\r\n          <TouchableOpacity\r\n            onPress={() => this.addFreind()}\r\n            style={Style.buttonStyleDefault}\r\n          >\r\n            <Text style={Style.buttonText}>Add Freind</Text>\r\n          </TouchableOpacity>\r\n\r\n          <Text>{this.state.falseText}</Text>\r\n        </View>\r\n      );\r\n    } else if (data == \"accept\") {\r\n      return (\r\n        <View>\r\n          <TouchableOpacity\r\n            onPress={() => this.AcceptReq()}\r\n            style={Style.AcceptButton}\r\n          >\r\n            <Text style={Style.AcceptText}>Accept</Text>\r\n          </TouchableOpacity>\r\n\r\n          <TouchableOpacity\r\n            onPress={() => this.DeclineReq()}\r\n            style={Style.DeclineButton}\r\n          >\r\n            <Text style={Style.DeclineText}>Decline</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      );\r\n    }\r\n  };\r\n  AcceptReq = async () => {\r\n    const id = this.state.id;\r\n    const value = await AsyncStorage.getItem(\"@session_token\");\r\n\r\n    return fetch(\"http://localhost:3333/api/1.0.0/friendrequests/\" + id, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"X-Authorization\": value,\r\n      },\r\n    })\r\n      .then((response) => {\r\n        if (response.status === 200) {\r\n          this.getFriendList();\r\n          this.forceUpdate();\r\n          //forceUpdate completely refreshes the page with the new states set\r\n\r\n          return response.json();\r\n        } else if (response.status === 401) {\r\n          this.getFriendList();\r\n          this.forceUpdate();\r\n\r\n          return response.json();\r\n        } else {\r\n          throw \"Something went wrong\";\r\n        }\r\n      })\r\n      .then((responseJson) => {\r\n        this.getFriendList();\r\n        this.forceUpdate();\r\n      })\r\n\r\n      .catch((error) => {\r\n        console.log(error, \"Accept Failed\");\r\n      });\r\n  };\r\n  DeclineReq = async () => {\r\n    const id = this.state.id;\r\n    const value = await AsyncStorage.getItem(\"@session_token\");\r\n\r\n    return fetch(\"http://localhost:3333/api/1.0.0/friendrequests/\" + id, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        \"X-Authorization\": value,\r\n      },\r\n    })\r\n      .then((response) => {\r\n        if (response.status === 200) {\r\n          this.getFriendList();\r\n          this.forceUpdate();\r\n        } else if (response.status === 401) {\r\n          this.getFriendList();\r\n          this.forceUpdate();\r\n          return response.json();\r\n        } else {\r\n          throw \"Something went wrong\";\r\n        }\r\n      })\r\n      .then((responseJson) => {\r\n        this.getFriendList();\r\n        this.forceUpdate();\r\n      })\r\n\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  loadPosts = async () => {\r\n\r\n    const id = this.state.id;\r\n\r\n    const value = await AsyncStorage.getItem(\"@session_token\");\r\n\r\n    return fetch(\"http://localhost:3333/api/1.0.0/user/\" + id + \"/post\", {\r\n      headers: {\r\n        \"X-Authorization\": value,\r\n      },\r\n    })\r\n      .then((response) => {\r\n        if (response.status === 200) {\r\n          return response.json();\r\n        } else if (response.status === 401) {\r\n          this.props.navigation.navigate(\"Login\");\r\n        } else if (response.status == 304) {\r\n          return response.json();\r\n        } else {\r\n          throw \"Something went wrong\";\r\n        }\r\n      })\r\n      .then((responseJson) => {\r\n        if (responseJson == \"\") {\r\n          this.setState({\r\n            Posts: [],\r\n            isLoading: false,\r\n          });\r\n\r\n          this.setState({ TextError: \"No Posts Available\" });\r\n        } else if (responseJson != \"\") {\r\n          this.setState({\r\n            Posts: responseJson,\r\n            isLoading: false,\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  DeletePost = async (Post_id) => {\r\n\r\n    const value = await AsyncStorage.getItem(\"@session_token\");\r\n    const id = this.state.id;\r\n\r\n    return fetch(\r\n      \"http://localhost:3333/api/1.0.0/user/\" + id + \"/post/\" + Post_id,\r\n      {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          \"X-Authorization\": value,\r\n        },\r\n      }\r\n    )\r\n      .then((response) => {\r\n        if (response.status === 200) {\r\n          this.setState({PostText:\"Post Deleted\"})\r\n          this.loadPosts();\r\n        } else if (response.status === 401) {\r\n          return response.json();\r\n        } else {\r\n          throw \"Something went wrong\";\r\n        }\r\n      })\r\n      .then((responseJson) => {\r\n        console.log(responseJson);\r\n      })\r\n\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  AddPost = async () => {\r\n\r\n    const value = await AsyncStorage.getItem(\"@session_token\");\r\n    const id = this.state.id;\r\n\r\n    if (this.state.text == \"\") {\r\n      return this.setState({ TextError: \"Please Enter Text\" });\r\n    }\r\n\r\n    return fetch(\"http://localhost:3333/api/1.0.0/user/\" + id + \"/post\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\", \"X-Authorization\": value },\r\n      body: JSON.stringify({\r\n        text: this.state.text,\r\n      }),\r\n    })\r\n      .then((response) => {\r\n        if (response.status === 200) {\r\n          return response.json();\r\n        } else if (response.status === 401) {\r\n          return response.json();\r\n        } else if (response.status === 201) {\r\n          this.setState({ falseText: \"Post Uploaded!\" });\r\n          this.loadPosts();\r\n          //loads posts again after new one is added\r\n        } else {\r\n          throw \"Something went wrong\";\r\n        }\r\n      })\r\n      .then((responseJson) => {\r\n        console.log(responseJson);\r\n      })\r\n\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  LikePost = async (item) => {\r\n    const value = await AsyncStorage.getItem(\"@session_token\");\r\n    const id = item.author.user_id;\r\n    const post_id = item.post_id;\r\n\r\n    return fetch(\r\n      \"http://localhost:3333/api/1.0.0/user/\" +\r\n        id +\r\n        \"/post/\" +\r\n        post_id +\r\n        \"/like\",\r\n      {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"X-Authorization\": value,\r\n        },\r\n      }\r\n    )\r\n      .then((response) => {\r\n        if (response.status === 200) {\r\n          this.loadPosts();\r\n          return response.json();\r\n        } else if (response.status === 401) {\r\n          return response.json();\r\n        } else if (response.status == 403) {\r\n          this.setState({PostText:\"Already Liked This Post\"})\r\n        } else if (response.status == 404){\r\n          this.setState({PostText:\"Cant Like Posts On Your Own Profile!\"})\r\n        } else {\r\n          throw \"Something went wrong\";\r\n        }\r\n      })\r\n      .then((responseJson) => {\r\n      })\r\n\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  UnlikePost = async (item) => {\r\n    const value = await AsyncStorage.getItem(\"@session_token\");\r\n    const id = item.author.user_id;\r\n    const post_id = item.post_id;\r\n\r\n    return fetch(\r\n      \"http://localhost:3333/api/1.0.0/user/\" +\r\n        id +\r\n        \"/post/\" +\r\n        post_id +\r\n        \"/like\",\r\n      {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"X-Authorization\": value,\r\n        },\r\n      }\r\n    )\r\n      .then((response) => {\r\n        if (response.status === 200) {\r\n          this.loadPosts();\r\n          return response.json();\r\n        } else if (response.status === 401) {\r\n          return response.json();\r\n        } else if (response.status == 403) {\r\n          this.setState({PostText:\"You Havent Liked This Post\"})\r\n        } else if (response.status == 404){\r\n          this.setState({PostText:\"Cant Remove Like Posts On Your Own Profile!\"})\r\n        } else {\r\n          throw \"Something went wrong\";\r\n        }\r\n      })\r\n      .then((responseJson) => {\r\n        this.setState({ like: \"like\" });\r\n      })\r\n\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  ProfilePic = async () => {\r\n    const value = await AsyncStorage.getItem(\"@session_token\");\r\n    const id = this.state.id;\r\n\r\n    return fetch(\"http://localhost:3333/api/1.0.0/user/\" + id + \"/photo\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"X-Authorization\": value,\r\n      },\r\n    })\r\n      .then((res) => {\r\n        return res.blob();\r\n      })\r\n      .then((resBlob) => {\r\n        const data = URL.createObjectURL(resBlob);\r\n        this.setState({\r\n          photo: data,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  SaveDraft = async () => {\r\n    const draft = {\r\n      id: String(this.state.LoggedID),\r\n      text: String(this.state.text),\r\n      date: null,\r\n    };\r\n    //create a key and value list\r\n\r\n    if (draft.text == \"\") {\r\n      return this.setState({ TextError: \"No Text Has Been Inputted\" });\r\n    }\r\n\r\n    const prev = [];\r\n    await AsyncStorage.getItem(\"draftStore\").then((prev) => {\r\n      if (prev == null) {\r\n        const newArr = [];\r\n        newArr.push(draft);\r\n        AsyncStorage.setItem(\"draftStore\", JSON.stringify(newArr));\r\n      } else {\r\n        const newArr2 = JSON.parse(prev);\r\n        newArr2.push(draft);\r\n        AsyncStorage.setItem(\"draftStore\", JSON.stringify(newArr2));\r\n      }\r\n    });\r\n\r\n    this.setState({ TextError: \"Draft Saved!\" });\r\n  };\r\n  DateGet = (time) => {\r\n    //this is used to calculate the long date to the amount of time in min/hours/days/shortdate\r\n    const postDate = new Date(time);\r\n    const curDate = new Date();\r\n\r\n    const diff = Math.abs(curDate - postDate);\r\n\r\n    const diffDays = Math.ceil(diff / (1000 * 60 * 60 * 24));\r\n\r\n    if (diffDays <= 1) {\r\n      const hours = Math.ceil(diff / (1000 * 60 * 60));\r\n\r\n      if (hours <= 1) {\r\n        return Math.ceil(diff / (1000 * 60)) + \" Min Ago\";\r\n      } else {\r\n        return Math.ceil(diff / (1000 * 60 * 60)) + \" Hours Ago\";\r\n      }\r\n    } else if (diffDays > 1) {\r\n      return diffDays + \" Days Ago\";\r\n    } else if (diffDays > 30) {\r\n      return postDate.toLocaleDateString(\"en-GB\");\r\n    }\r\n  };\r\n\r\n  render() {\r\n    if (this.state.isLoading) {\r\n      return (\r\n        <View style={Style.centerText}>\r\n          <Text>Loading...</Text>\r\n        </View>\r\n      );\r\n    } else {\r\n      if (this.state.Freinds == false) {\r\n        return (\r\n          <View style={Style.centerText}>\r\n            <Image\r\n              source={{\r\n                uri: this.state.photo,\r\n              }}\r\n              style={{\r\n                height: 100,\r\n                width: 100,\r\n                borderRadius: 50,\r\n              }}\r\n            />\r\n\r\n            <Text style={Style.titleText}>\r\n              {this.state.User.first_name} {this.state.User.last_name}{\" \"}\r\n            </Text>\r\n\r\n            <Text>{this.FreindButtonStatus(this.state.Type)}</Text>\r\n          </View>\r\n        );\r\n      } else {\r\n        return (\r\n          <ScrollView>\r\n            <View style={{ justifyContent: \"center\", alignItems: \"center\" }}>\r\n              <Image\r\n                source={{\r\n                  uri: this.state.photo,\r\n                }}\r\n                style={{\r\n                  marginTop: 50,\r\n                  marginBottom: 15,\r\n                  height: 100,\r\n                  width: 100,\r\n                  borderRadius: 50,\r\n                }}\r\n              />\r\n\r\n              <Text style={Style.titleText}>\r\n                {this.state.User.first_name} {this.state.User.last_name}{\" \"}\r\n              </Text>\r\n            </View>\r\n            <TextInput\r\n              placeholder=\"Type New Post Here...\"\r\n              onChangeText={(text) => this.setState({ text })}\r\n              value={this.state.text}\r\n              style={Style.inputBox}\r\n            />\r\n            <Text style={Style.errorText}>{this.state.TextError}</Text>\r\n\r\n            <View\r\n              style={{\r\n                flexDirection: \"row\",\r\n                justifyContent: \"space-between\",\r\n                padding: 15,\r\n              }}\r\n            >\r\n              <TouchableOpacity\r\n                onPress={() => {\r\n                  this.AddPost();\r\n                }}\r\n                style={Style.homeButton}\r\n              >\r\n                <Text style={{ color: \"white\" }}>Upload Post</Text>\r\n              </TouchableOpacity>\r\n\r\n              {this.state.id == this.state.LoggedID && (\r\n                <TouchableOpacity\r\n                  onPress={() => {\r\n                    this.SaveDraft();\r\n                  }}\r\n                  style={Style.homeButton}\r\n                >\r\n                  <Text style={Style.buttonText}>Save Draft</Text>\r\n                </TouchableOpacity>\r\n              )}\r\n              {this.state.id == this.state.LoggedID && (\r\n                <TouchableOpacity\r\n                  onPress={() => this.props.navigation.navigate(\"ViewDrafts\")}\r\n                  style={Style.homeButton}\r\n                >\r\n                  <Text style={Style.buttonText}>View Drafts</Text>\r\n                </TouchableOpacity>\r\n              )}\r\n            </View>\r\n\r\n            <TouchableOpacity\r\n              onPress={() =>\r\n                this.props.navigation.navigate(\"ProfileFriends\", {\r\n                  id: this.state.id,\r\n                })\r\n              }\r\n              style={Style.buttonStyleDefault}\r\n            >\r\n              <Text style={Style.buttonText}>View Freinds List</Text>\r\n            </TouchableOpacity>\r\n\r\n            <Text style={Style.errorText}>{this.state.PostText}</Text>\r\n\r\n            <FlatList\r\n              contentContainerStyle={{\r\n                paddingLeft: 15,\r\n                paddingRight: 15, // THIS DOESN'T SEEM TO BE WORKING\r\n                marginBottom: 20,\r\n              }}\r\n              data={this.state.Posts}\r\n              renderItem={({ item }) => (\r\n                <ScrollView\r\n                  style={{\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 15,\r\n                    marginTop: 20,\r\n                  }}\r\n                >\r\n                  <View\r\n                    style={{\r\n                      flexDirection: \"row\",\r\n                      justifyContent: \"space-between\",\r\n                      paddingTop: 20,\r\n                    }}\r\n                  >\r\n                    <Text\r\n                      style={{\r\n                        color: \"grey\",\r\n                        fontWeight: \"bold\",\r\n                        fontSize: 15,\r\n                        paddingLeft: 10,\r\n                      }}\r\n                    >\r\n                      {item.author.first_name +\r\n                        \" \" +\r\n                        item.author.last_name +\r\n                        \"\\n\" +\r\n                        this.DateGet(item.timestamp)}\r\n                    </Text>\r\n\r\n                    {this.state.LoggedID == item.author.user_id && (\r\n                      <View\r\n                        style={{\r\n                          flexDirection: \"row\",\r\n                          justifyContent: \"flex-end\",\r\n                        }}\r\n                      >\r\n                        <View>\r\n                          <TouchableOpacity\r\n                            style={{ backgroundColor: \"white\" }}\r\n                            onPress={() =>\r\n                              this.props.navigation.navigate(\"Post\", {\r\n                                item: item,\r\n                                id: this.state.id,\r\n                              })\r\n                            }\r\n                          >\r\n                            <Text\r\n                              style={{\r\n                                color: \"black\",\r\n                                fontWeight: \"700\",\r\n                                paddingRight: 20,\r\n                                paddingLeft: 20,\r\n                              }}\r\n                            >\r\n                              Edit\r\n                            </Text>\r\n                          </TouchableOpacity>\r\n                        </View>\r\n                        <View>\r\n                          <TouchableOpacity\r\n                            style={{ backgroundColor: \"white\" }}\r\n                            onPress={() => this.DeletePost(item.post_id)}\r\n                          >\r\n                            <Text\r\n                              style={{\r\n                                color: \"red\",\r\n                                fontWeight: \"700\",\r\n                                paddingRight: 20,\r\n                              }}\r\n                            >\r\n                              Delete\r\n                            </Text>\r\n                          </TouchableOpacity>\r\n                        </View>\r\n                      </View>\r\n                    )}\r\n                  </View>\r\n                  <TouchableOpacity\r\n                    style={{ backgroundColor: \"white\" }}\r\n                    onPress={() =>\r\n                      this.props.navigation.navigate(\"ViewPost\", {\r\n                        items: item,\r\n                        id: this.state.id,\r\n                      })\r\n                    }\r\n                  >\r\n                    <Text\r\n                      style={{\r\n                        color: \"black\",\r\n                        paddingLeft: 20,\r\n                        paddingRight: 20,\r\n                        paddingBottom: 20,\r\n                        paddingTop: 20,\r\n                      }}\r\n                    >\r\n                      {item.text}\r\n                    </Text>\r\n                  </TouchableOpacity>\r\n\r\n                  {this.state.LoggedID != item.author.user_id && (\r\n                    <View style={{ flexDirection: \"row\" }}>\r\n                      <View>\r\n                        <TouchableOpacity\r\n                          style={{ backgroundColor: \"white\" }}\r\n                          onPress={() => {\r\n                            this.LikePost(item);\r\n                          }}\r\n                        >\r\n                          <Text\r\n                            style={{\r\n                              color: \"green\",\r\n                              paddingLeft: 20,\r\n                              paddingRight: 20,\r\n                              paddingBottom: 20,\r\n                              paddingTop: 20,\r\n                            }}\r\n                          >\r\n                            Like {item.numLikes}\r\n                          </Text>\r\n                        </TouchableOpacity>\r\n                      </View>\r\n                      <View>\r\n                        <TouchableOpacity\r\n                          style={{ backgroundColor: \"white\" }}\r\n                          title=\"Remove Like\"\r\n                          onPress={() => {\r\n                            this.UnlikePost(item);\r\n                          }}\r\n                        >\r\n                          <Text\r\n                            style={{\r\n                              color: \"red\",\r\n                              paddingLeft: 20,\r\n                              paddingRight: 20,\r\n                              paddingBottom: 20,\r\n                              paddingTop: 20,\r\n                            }}\r\n                          >\r\n                            Remove Like\r\n                          </Text>\r\n                        </TouchableOpacity>\r\n                      </View>\r\n                    </View>\r\n                  )}\r\n                </ScrollView>\r\n              )}\r\n              keyExtractor={(item, index) => item.author.user_id.toString()}\r\n            />\r\n          </ScrollView>\r\n        );\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default Profile;\r\n"]},"metadata":{},"sourceType":"module"}