{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport Style from \"./Style\";\nimport UploadDrafts from \"./UploadDraft\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Post = function (_Component) {\n  _inherits(Post, _Component);\n\n  var _super = _createSuper(Post);\n\n  function Post(props) {\n    var _this;\n\n    _classCallCheck(this, Post);\n\n    _this = _super.call(this, props);\n\n    _this.checkLoggedIn = function _callee() {\n      var value;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"@session_token\"));\n\n            case 2:\n              value = _context.sent;\n\n              if (value == null) {\n                _this.props.navigation.navigate(\"Login\");\n              }\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.SavePost = function _callee2() {\n      var value, id, post_id, Text;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"@session_token\"));\n\n            case 2:\n              value = _context2.sent;\n              id = _this.state.id;\n              post_id = _this.state.post_id;\n              Text = String(_this.state.text);\n\n              if (!(Text == \"\")) {\n                _context2.next = 8;\n                break;\n              }\n\n              return _context2.abrupt(\"return\", _this.setState({\n                errorText: \"Error: Please Enter Text\"\n              }));\n\n            case 8:\n              return _context2.abrupt(\"return\", fetch(\"http://localhost:3333/api/1.0.0/user/\" + id + \"/post/\" + post_id, {\n                method: \"PATCH\",\n                headers: {\n                  \"Content-Type\": \"application/json\",\n                  \"X-Authorization\": value\n                },\n                body: JSON.stringify({\n                  text: Text\n                })\n              }).then(function (response) {\n                if (response.status === 200) {\n                  _this.setState({\n                    errorText: \"Changes Saved To Post\"\n                  });\n\n                  return response.json();\n                } else if (response.status === 401) {\n                  return response.json();\n                } else if (response.status == 403) {\n                  _this.setState({\n                    errorText: \"Error: Bad Data / Missing Fields\"\n                  });\n                } else {\n                  throw \"Something went wrong\";\n                }\n              }).then(function (responseJson) {\n                console.log(responseJson);\n              }).catch(function (error) {\n                console.log(error);\n              }));\n\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.state = {\n      text: \"\",\n      errorText: \"\",\n      post_id: \"\",\n      id: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(Post, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      return _regeneratorRuntime.async(function componentDidMount$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              this.unsubscribe = this.props.navigation.addListener(\"focus\", function () {\n                _this2.checkLoggedIn();\n\n                UploadDrafts.dateCheck();\n\n                _this2.setState({\n                  text: _this2.props.route.params.item.text\n                });\n\n                _this2.setState({\n                  post_id: _this2.props.route.params.item.post_id\n                });\n\n                _this2.setState({\n                  id: _this2.props.route.params.id\n                });\n              });\n\n            case 1:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.unsubscribe();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return _jsxs(View, {\n        children: [_jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return _this3.props.navigation.goBack();\n          },\n          style: Style.searchBtn,\n          children: _jsx(Text, {\n            style: Style.searchText,\n            children: \"Back\"\n          })\n        }), _jsx(TextInput, {\n          onChangeText: function onChangeText(text) {\n            return _this3.setState({\n              text: text\n            });\n          },\n          value: this.state.text,\n          style: Style.inputBox\n        }), _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            _this3.SavePost();\n          },\n          style: Style.buttonStyleDefault,\n          children: _jsx(Text, {\n            style: Style.buttonText,\n            children: \"Save Changes\"\n          })\n        }), _jsx(Text, {\n          style: Style.errorText,\n          children: this.state.errorText\n        })]\n      });\n    }\n  }]);\n\n  return Post;\n}(Component);\n\nexport default Post;","map":{"version":3,"sources":["C:/Users/Ruman/Documents/GitHub/spacebook2/components/Post.js"],"names":["React","Component","AsyncStorage","Style","UploadDrafts","Post","props","checkLoggedIn","getItem","value","navigation","navigate","SavePost","id","state","post_id","Text","String","text","setState","errorText","fetch","method","headers","body","JSON","stringify","then","response","status","json","responseJson","console","log","catch","error","unsubscribe","addListener","dateCheck","route","params","item","goBack","searchBtn","searchText","inputBox","buttonStyleDefault","buttonText"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { ScrollView,View,Text,FlatList,TextInput,TouchableOpacity } from \"react-native\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport Style from \"./Style\";\r\nimport UploadDrafts from \"./UploadDraft\";\r\n\r\nclass Post extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      text: \"\",\r\n      errorText: \"\",\r\n      post_id: \"\",\r\n      id: \"\",\r\n    };\r\n  }\r\n  async componentDidMount() {\r\n    this.unsubscribe = this.props.navigation.addListener(\"focus\", () => {\r\n      this.checkLoggedIn();\r\n      UploadDrafts.dateCheck();\r\n      this.setState({ text: this.props.route.params.item.text });\r\n      this.setState({ post_id: this.props.route.params.item.post_id });\r\n      this.setState({ id: this.props.route.params.id });\r\n      //as the user navigates to this screen via the main tabs all of the params are collected to the states\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.unsubscribe();\r\n  }\r\n\r\n  checkLoggedIn = async () => {\r\n    const value = await AsyncStorage.getItem(\"@session_token\");\r\n\r\n    if (value == null) {\r\n      this.props.navigation.navigate(\"Login\");\r\n    }\r\n  };\r\n\r\n  SavePost = async () => {\r\n    const value = await AsyncStorage.getItem(\"@session_token\");\r\n\r\n    const id = this.state.id;\r\n    const post_id = this.state.post_id;\r\n    const Text = String(this.state.text);\r\n\r\n    if (Text == \"\") {\r\n      return this.setState({ errorText: \"Error: Please Enter Text\" });\r\n    }\r\n\r\n    return fetch(\r\n      \"http://localhost:3333/api/1.0.0/user/\" + id + \"/post/\" + post_id,\r\n      {\r\n        method: \"PATCH\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"X-Authorization\": value,\r\n        },\r\n        body: JSON.stringify({\r\n          text: Text,\r\n        }),\r\n      }\r\n    )\r\n      .then((response) => {\r\n        if (response.status === 200) {\r\n          this.setState({ errorText: \"Changes Saved To Post\" });\r\n          return response.json();\r\n        } else if (response.status === 401) {\r\n          return response.json();\r\n        } else if (response.status == 403) {\r\n          this.setState({ errorText: \"Error: Bad Data / Missing Fields\" });\r\n        } else {\r\n          throw \"Something went wrong\";\r\n        }\r\n      })\r\n      .then((responseJson) => {\r\n        console.log(responseJson);\r\n      })\r\n\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <View>\r\n        <TouchableOpacity\r\n          onPress={() => this.props.navigation.goBack()}\r\n          style={Style.searchBtn}\r\n        >\r\n          <Text style={Style.searchText}>Back</Text>\r\n        </TouchableOpacity>\r\n\r\n        <TextInput\r\n          onChangeText={(text) => this.setState({ text })}\r\n          value={this.state.text}\r\n          style={Style.inputBox}\r\n        />\r\n\r\n        <TouchableOpacity\r\n          onPress={() => {\r\n            this.SavePost();\r\n          }}\r\n          style={Style.buttonStyleDefault}\r\n        >\r\n          <Text style={Style.buttonText}>Save Changes</Text>\r\n        </TouchableOpacity>\r\n\r\n        <Text style={Style.errorText}>{this.state.errorText}</Text>\r\n      </View>\r\n    );\r\n  }\r\n}\r\nexport default Post;\r\n"]},"metadata":{},"sourceType":"module"}