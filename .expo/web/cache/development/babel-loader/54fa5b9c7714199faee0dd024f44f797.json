{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { ScrollView } from \"react-native-gesture-handler\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport Style from \"./Style\";\nimport logo from \"./logo.png\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Login = function (_Component) {\n  _inherits(Login, _Component);\n\n  var _super = _createSuper(Login);\n\n  function Login(props) {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    _this = _super.call(this, props);\n\n    _this.login = function _callee2() {\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              return _context2.abrupt(\"return\", fetch(\"http://localhost:3333/api/1.0.0/login\", {\n                method: \"POST\",\n                headers: {\n                  \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                  email: _this.state.email,\n                  password: _this.state.password\n                })\n              }).then(function (response) {\n                if (response.status === 200) {\n                  return response.json();\n                } else if (response.status === 400) {\n                  return _this.setState({\n                    errorTxt: \"Invalid Email or Password\"\n                  });\n                } else if (response.status == 500) {\n                  return _this.setState({\n                    errorTxt: \"Server Not Eesponding\"\n                  });\n                } else {\n                  return _this.setState({\n                    errorTxt: \"Something went wrong\"\n                  });\n                  throw \"Something went wrong\";\n                }\n              }).then(function _callee(responseJson) {\n                return _regeneratorRuntime.async(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        _context.next = 2;\n                        return _regeneratorRuntime.awrap(AsyncStorage.multiSet([[\"@session_token\", responseJson.token], [\"@id\", String(responseJson.id)]]));\n\n                      case 2:\n                        _this.props.navigation.navigate(\"Homes\", {\n                          screen: \"Profile\"\n                        });\n\n                      case 3:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, null, null, null, Promise);\n              }).catch(function (error) {\n                console.error(error);\n              }));\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.state = {\n      email: \"\",\n      password: \"\",\n      errorTxt: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return _jsxs(View, {\n        style: {\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          marginTop: 100\n        },\n        children: [_jsx(Image, {\n          style: {\n            height: 200,\n            width: 200\n          },\n          source: logo\n        }), _jsxs(View, {\n          style: Style.welcome,\n          children: [_jsx(TextInput, {\n            style: Style.inputBox,\n            onChangeText: function onChangeText(value) {\n              return _this2.setState({\n                email: value\n              });\n            },\n            value: this.state.email\n          }), _jsx(TextInput, {\n            style: Style.inputBox,\n            secureTextEntry: true,\n            onChangeText: function onChangeText(value) {\n              return _this2.setState({\n                password: value\n              });\n            },\n            value: this.state.password\n          }), _jsx(Text, {\n            style: Style.errorText,\n            children: this.state.errorTxt\n          }), _jsx(TouchableOpacity, {\n            style: Style.buttonStyleDefault,\n            onPress: function onPress() {\n              _this2.login();\n            },\n            children: _jsx(Text, {\n              style: Style.buttonText,\n              children: \"Login\"\n            })\n          }), _jsx(TouchableOpacity, {\n            style: Style.buttonStyleDefault,\n            onPress: function onPress() {\n              return _this2.props.navigation.navigate(\"SignUP\");\n            },\n            children: _jsx(Text, {\n              style: Style.buttonText,\n              children: \"Sign Up\"\n            })\n          })]\n        })]\n      });\n    }\n  }]);\n\n  return Login;\n}(Component);\n\nexport default Login;","map":{"version":3,"sources":["C:/Users/Ruman/Documents/GitHub/spacebook2/components/Login.js"],"names":["React","Component","ScrollView","AsyncStorage","Style","logo","Login","props","login","fetch","method","headers","body","JSON","stringify","email","state","password","then","response","status","json","setState","errorTxt","responseJson","multiSet","token","String","id","navigation","navigate","screen","catch","error","console","justifyContent","alignItems","marginTop","height","width","welcome","inputBox","value","errorText","buttonStyleDefault","buttonText"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;;;AAEA,SAASC,UAAT,QAA2B,8BAA3B;AACA,OAAOC,YAAP,MAAyB,2CAAzB;AACA,OAAOC,KAAP;AACA,OAAOC,IAAP;;;;IAEMC,K;;;;;AACJ,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;;AADiB,UASnBC,KATmB,GASX;AAAA;AAAA;AAAA;AAAA;AAAA,gDAECC,KAAK,CAAC,uCAAD,EAA0C;AACpDC,gBAAAA,MAAM,EAAE,MAD4C;AAEpDC,gBAAAA,OAAO,EAAE;AAAE,kCAAgB;AAAlB,iBAF2C;AAGpDC,gBAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,kBAAAA,KAAK,EAAE,MAAKC,KAAL,CAAWD,KADC;AAEnBE,kBAAAA,QAAQ,EAAE,MAAKD,KAAL,CAAWC;AAFF,iBAAf;AAH8C,eAA1C,CAAL,CAQJC,IARI,CAQC,UAACC,QAAD,EAAc;AAClB,oBAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,yBAAOD,QAAQ,CAACE,IAAT,EAAP;AACD,iBAFD,MAEO,IAAIF,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAClC,yBAAO,MAAKE,QAAL,CAAc;AAAEC,oBAAAA,QAAQ,EAAE;AAAZ,mBAAd,CAAP;AAED,iBAHM,MAGA,IAAIJ,QAAQ,CAACC,MAAT,IAAmB,GAAvB,EAA4B;AACjC,yBAAO,MAAKE,QAAL,CAAc;AAAEC,oBAAAA,QAAQ,EAAE;AAAZ,mBAAd,CAAP;AAED,iBAHM,MAGA;AACL,yBAAO,MAAKD,QAAL,CAAc;AAAEC,oBAAAA,QAAQ,EAAE;AAAZ,mBAAd,CAAP;AACA,wBAAM,sBAAN;AACD;AACF,eArBI,EAuBJL,IAvBI,CAuBC,iBAAOM,YAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yDACErB,YAAY,CAACsB,QAAb,CAAsB,CAC1B,CAAC,gBAAD,EAAmBD,YAAY,CAACE,KAAhC,CAD0B,EAE1B,CAAC,KAAD,EAAQC,MAAM,CAACH,YAAY,CAACI,EAAd,CAAd,CAF0B,CAAtB,CADF;;AAAA;AAMJ,8BAAKrB,KAAL,CAAWsB,UAAX,CAAsBC,QAAtB,CAA+B,OAA/B,EAAwC;AAAEC,0BAAAA,MAAM,EAAE;AAAV,yBAAxC;;AANI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAvBD,EAgCJC,KAhCI,CAgCE,UAACC,KAAD,EAAW;AAChBC,gBAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACD,eAlCI,CAFD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KATW;;AAGjB,UAAKjB,KAAL,GAAa;AACXD,MAAAA,KAAK,EAAE,EADI;AAEXE,MAAAA,QAAQ,EAAE,EAFC;AAGXM,MAAAA,QAAQ,EAAE;AAHC,KAAb;AAHiB;AAQlB;;;;WAwCD,kBAAS;AAAA;;AACP,aACE,MAAC,IAAD;AACE,QAAA,KAAK,EAAE;AACLY,UAAAA,cAAc,EAAE,QADX;AAELC,UAAAA,UAAU,EAAE,QAFP;AAGLC,UAAAA,SAAS,EAAE;AAHN,SADT;AAAA,mBAOE,KAAC,KAAD;AAAO,UAAA,KAAK,EAAE;AAAEC,YAAAA,MAAM,EAAE,GAAV;AAAeC,YAAAA,KAAK,EAAE;AAAtB,WAAd;AAA2C,UAAA,MAAM,EAAElC;AAAnD,UAPF,EASE,MAAC,IAAD;AAAM,UAAA,KAAK,EAAED,KAAK,CAACoC,OAAnB;AAAA,qBACE,KAAC,SAAD;AACE,YAAA,KAAK,EAAEpC,KAAK,CAACqC,QADf;AAEE,YAAA,YAAY,EAAE,sBAACC,KAAD;AAAA,qBAAW,MAAI,CAACpB,QAAL,CAAc;AAAEP,gBAAAA,KAAK,EAAE2B;AAAT,eAAd,CAAX;AAAA,aAFhB;AAGE,YAAA,KAAK,EAAE,KAAK1B,KAAL,CAAWD;AAHpB,YADF,EAOE,KAAC,SAAD;AACE,YAAA,KAAK,EAAEX,KAAK,CAACqC,QADf;AAEE,YAAA,eAAe,EAAE,IAFnB;AAGE,YAAA,YAAY,EAAE,sBAACC,KAAD;AAAA,qBAAW,MAAI,CAACpB,QAAL,CAAc;AAAEL,gBAAAA,QAAQ,EAAEyB;AAAZ,eAAd,CAAX;AAAA,aAHhB;AAIE,YAAA,KAAK,EAAE,KAAK1B,KAAL,CAAWC;AAJpB,YAPF,EAcE,KAAC,IAAD;AAAM,YAAA,KAAK,EAAEb,KAAK,CAACuC,SAAnB;AAAA,sBAA+B,KAAK3B,KAAL,CAAWO;AAA1C,YAdF,EAgBE,KAAC,gBAAD;AACE,YAAA,KAAK,EAAEnB,KAAK,CAACwC,kBADf;AAEE,YAAA,OAAO,EAAE,mBAAM;AACb,cAAA,MAAI,CAACpC,KAAL;AACD,aAJH;AAAA,sBAME,KAAC,IAAD;AAAM,cAAA,KAAK,EAAEJ,KAAK,CAACyC,UAAnB;AAAA;AAAA;AANF,YAhBF,EAyBE,KAAC,gBAAD;AACE,YAAA,KAAK,EAAEzC,KAAK,CAACwC,kBADf;AAEE,YAAA,OAAO,EAAE;AAAA,qBAAM,MAAI,CAACrC,KAAL,CAAWsB,UAAX,CAAsBC,QAAtB,CAA+B,QAA/B,CAAN;AAAA,aAFX;AAAA,sBAIE,KAAC,IAAD;AAAM,cAAA,KAAK,EAAE1B,KAAK,CAACyC,UAAnB;AAAA;AAAA;AAJF,YAzBF;AAAA,UATF;AAAA,QADF;AA4CD;;;;EA9FiB5C,S;;AAiGpB,eAAeK,KAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { View,Text,StyleSheet,TextInput,TouchableOpacity,Image } from \"react-native\";\r\nimport { ScrollView } from \"react-native-gesture-handler\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport Style from \"./Style\";\r\nimport logo from \"./logo.png\";\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      errorTxt: \"\",\r\n    };\r\n  }\r\n  login = async () => {\r\n\r\n    return fetch(\"http://localhost:3333/api/1.0.0/login\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        email: this.state.email,\r\n        password: this.state.password,\r\n      })\r\n    })\r\n      .then((response) => {\r\n        if (response.status === 200) {\r\n          return response.json();\r\n        } else if (response.status === 400) {\r\n          return this.setState({ errorTxt: \"Invalid Email or Password\" });\r\n          //used display the resposnes from the server\r\n        } else if (response.status == 500) {\r\n          return this.setState({ errorTxt: \"Server Not Eesponding\" });\r\n          //each error code returns a diffrent response to the user\r\n        } else {\r\n          return this.setState({ errorTxt: \"Something went wrong\" });\r\n          throw \"Something went wrong\";\r\n        }\r\n      })\r\n\r\n      .then(async (responseJson) => {\r\n        await AsyncStorage.multiSet([\r\n          [\"@session_token\", responseJson.token],\r\n          [\"@id\", String(responseJson.id)],\r\n        ]);\r\n        //multi-set this way two keys can be set at once\r\n        this.props.navigation.navigate(\"Homes\", { screen: \"Profile\" });\r\n        //navigate to the nested stack which contains the app\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <View\r\n        style={{\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n          marginTop: 100,\r\n        }}\r\n      >\r\n        <Image style={{ height: 200, width: 200 }} source={logo} />\r\n\r\n        <View style={Style.welcome}>\r\n          <TextInput\r\n            style={Style.inputBox}\r\n            onChangeText={(value) => this.setState({ email: value })}\r\n            value={this.state.email}\r\n          />\r\n\r\n          <TextInput\r\n            style={Style.inputBox}\r\n            secureTextEntry={true}\r\n            onChangeText={(value) => this.setState({ password: value })}\r\n            value={this.state.password}\r\n          />\r\n\r\n          <Text style={Style.errorText}>{this.state.errorTxt}</Text>\r\n\r\n          <TouchableOpacity\r\n            style={Style.buttonStyleDefault}\r\n            onPress={() => {\r\n              this.login();\r\n            }}\r\n          >\r\n            <Text style={Style.buttonText}>Login</Text>\r\n          </TouchableOpacity>\r\n\r\n          <TouchableOpacity\r\n            style={Style.buttonStyleDefault}\r\n            onPress={() => this.props.navigation.navigate(\"SignUP\")}\r\n          >\r\n            <Text style={Style.buttonText}>Sign Up</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}