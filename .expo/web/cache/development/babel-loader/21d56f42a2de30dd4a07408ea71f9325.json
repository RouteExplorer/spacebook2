{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport Style from \"./Style\";\nimport UploadDrafts from \"./UploadDraft\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar ViewPost = function (_Component) {\n  _inherits(ViewPost, _Component);\n\n  var _super = _createSuper(ViewPost);\n\n  function ViewPost(props) {\n    var _this;\n\n    _classCallCheck(this, ViewPost);\n\n    _this = _super.call(this, props);\n\n    _this.checkLoggedIn = function _callee() {\n      var value;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"@session_token\"));\n\n            case 2:\n              value = _context.sent;\n\n              if (value == null) {\n                _this.props.navigation.navigate(\"Login\");\n              }\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.GetSinglePost = function _callee2(items) {\n      var postid, id, value;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              postid = items.post_id;\n              id = _this.props.route.params.id;\n              _context2.next = 4;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"@session_token\"));\n\n            case 4:\n              value = _context2.sent;\n              return _context2.abrupt(\"return\", fetch(\"http://localhost:3333/api/1.0.0/user/\" + id + \"/post/\" + postid, {\n                headers: {\n                  \"X-Authorization\": value\n                }\n              }).then(function (response) {\n                if (response.status === 200) {\n                  return response.json();\n                } else if (response.status === 401) {\n                  _this.props.navigation.navigate(\"Profile\");\n                } else {\n                  throw \"Something went wrong\";\n                }\n              }).then(function (responseJson) {\n                _this.setState({\n                  post: responseJson,\n                  isLoading: false\n                });\n              }).catch(function (error) {\n                console.log(error);\n              }));\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.state = {\n      post: \"\",\n      isLoading: true\n    };\n    return _this;\n  }\n\n  _createClass(ViewPost, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      return _regeneratorRuntime.async(function componentDidMount$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              this.unsubscribe = this.props.navigation.addListener(\"focus\", function () {\n                _this2.checkLoggedIn();\n\n                UploadDrafts.dateCheck();\n\n                _this2.GetSinglePost(_this2.props.route.params.items);\n              });\n\n            case 1:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.unsubscribe();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      if (this.state.isLoading) {\n        return _jsxs(View, {\n          style: {\n            flex: 1,\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            alignItems: \"center\"\n          },\n          children: [_jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              return _this3.props.navigation.goBack();\n            },\n            style: Style.searchBtn,\n            children: _jsx(Text, {\n              style: Style.searchText,\n              children: \"Back\"\n            })\n          }), _jsx(Text, {\n            children: \"Loading..\"\n          })]\n        });\n      } else {\n        return _jsxs(View, {\n          children: [_jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              return _this3.props.navigation.goBack();\n            },\n            style: Style.searchBtn,\n            children: _jsx(Text, {\n              style: Style.searchText,\n              children: \"Back\"\n            })\n          }), _jsx(Text, {\n            style: {\n              textAlign: \"center\",\n              fontWeight: \"800\",\n              fontSize: 20\n            },\n            children: this.state.post.author.first_name + \" \" + this.state.post.author.last_name + \"\\n\" + this.state.post.timestamp\n          }), _jsx(Text, {\n            style: {\n              textAlign: \"center\",\n              fontWeight: \"400\",\n              fontSize: 15,\n              paddingTop: 20\n            },\n            children: this.state.post.text\n          }), _jsxs(Text, {\n            style: {\n              textAlign: \"left\",\n              paddingLeft: 30,\n              fontWeight: \"600\"\n            },\n            children: [this.state.post.numLikes, \" Likes\"]\n          })]\n        });\n      }\n    }\n  }]);\n\n  return ViewPost;\n}(Component);\n\nexport default ViewPost;","map":{"version":3,"sources":["C:/Users/Ruman/Documents/GitHub/spacebook2/components/ViewPost.js"],"names":["React","Component","AsyncStorage","Style","UploadDrafts","ViewPost","props","checkLoggedIn","getItem","value","navigation","navigate","GetSinglePost","items","postid","post_id","id","route","params","fetch","headers","then","response","status","json","responseJson","setState","post","isLoading","catch","error","console","log","state","unsubscribe","addListener","dateCheck","flex","flexDirection","justifyContent","alignItems","goBack","searchBtn","searchText","textAlign","fontWeight","fontSize","author","first_name","last_name","timestamp","paddingTop","text","paddingLeft","numLikes"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;;AAEA,OAAOC,YAAP,MAAyB,2CAAzB;AACA,OAAOC,KAAP;AACA,OAAOC,YAAP;;;;IAEMC,Q;;;;;AACJ,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;;AADiB,UAkBnBC,aAlBmB,GAkBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACML,YAAY,CAACM,OAAb,CAAqB,gBAArB,CADN;;AAAA;AACRC,cAAAA,KADQ;;AAGd,kBAAIA,KAAK,IAAI,IAAb,EAAmB;AACjB,sBAAKH,KAAL,CAAWI,UAAX,CAAsBC,QAAtB,CAA+B,OAA/B;AACD;;AALa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAlBG;;AAAA,UAyBnBC,aAzBmB,GAyBH,kBAAOC,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACRC,cAAAA,MADQ,GACCD,KAAK,CAACE,OADP;AAERC,cAAAA,EAFQ,GAEH,MAAKV,KAAL,CAAWW,KAAX,CAAiBC,MAAjB,CAAwBF,EAFrB;AAAA;AAAA,+CAIMd,YAAY,CAACM,OAAb,CAAqB,gBAArB,CAJN;;AAAA;AAIRC,cAAAA,KAJQ;AAAA,gDAMPU,KAAK,CACV,0CAA0CH,EAA1C,GAA+C,QAA/C,GAA0DF,MADhD,EAEV;AACEM,gBAAAA,OAAO,EAAE;AACP,qCAAmBX;AADZ;AADX,eAFU,CAAL,CAQJY,IARI,CAQC,UAACC,QAAD,EAAc;AAClB,oBAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,yBAAOD,QAAQ,CAACE,IAAT,EAAP;AACD,iBAFD,MAEO,IAAIF,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAClC,wBAAKjB,KAAL,CAAWI,UAAX,CAAsBC,QAAtB,CAA+B,SAA/B;AACD,iBAFM,MAEA;AACL,wBAAM,sBAAN;AACD;AACF,eAhBI,EAiBJU,IAjBI,CAiBC,UAACI,YAAD,EAAkB;AACtB,sBAAKC,QAAL,CAAc;AACZC,kBAAAA,IAAI,EAAEF,YADM;AAEZG,kBAAAA,SAAS,EAAE;AAFC,iBAAd;AAID,eAtBI,EAuBJC,KAvBI,CAuBE,UAACC,KAAD,EAAW;AAChBC,gBAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,eAzBI,CANO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAzBG;;AAEjB,UAAKG,KAAL,GAAa;AACXN,MAAAA,IAAI,EAAE,EADK;AAEXC,MAAAA,SAAS,EAAE;AAFA,KAAb;AAFiB;AAMlB;;;;WACD;AAAA;;AAAA;AAAA;AAAA;AAAA;AACE,mBAAKM,WAAL,GAAmB,KAAK5B,KAAL,CAAWI,UAAX,CAAsByB,WAAtB,CAAkC,OAAlC,EAA2C,YAAM;AAClE,gBAAA,MAAI,CAAC5B,aAAL;;AACAH,gBAAAA,YAAY,CAACgC,SAAb;;AACA,gBAAA,MAAI,CAACxB,aAAL,CAAmB,MAAI,CAACN,KAAL,CAAWW,KAAX,CAAiBC,MAAjB,CAAwBL,KAA3C;AACD,eAJkB,CAAnB;;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;WAOA,gCAAuB;AACrB,WAAKqB,WAAL;AACD;;;WA2CD,kBAAS;AAAA;;AACP,UAAI,KAAKD,KAAL,CAAWL,SAAf,EAA0B;AACxB,eACE,MAAC,IAAD;AACE,UAAA,KAAK,EAAE;AACLS,YAAAA,IAAI,EAAE,CADD;AAELC,YAAAA,aAAa,EAAE,QAFV;AAGLC,YAAAA,cAAc,EAAE,QAHX;AAILC,YAAAA,UAAU,EAAE;AAJP,WADT;AAAA,qBAQE,KAAC,gBAAD;AACE,YAAA,OAAO,EAAE;AAAA,qBAAM,MAAI,CAAClC,KAAL,CAAWI,UAAX,CAAsB+B,MAAtB,EAAN;AAAA,aADX;AAEE,YAAA,KAAK,EAAEtC,KAAK,CAACuC,SAFf;AAAA,sBAIE,KAAC,IAAD;AAAM,cAAA,KAAK,EAAEvC,KAAK,CAACwC,UAAnB;AAAA;AAAA;AAJF,YARF,EAcE,KAAC,IAAD;AAAA;AAAA,YAdF;AAAA,UADF;AAkBD,OAnBD,MAmBO;AACL,eACE,MAAC,IAAD;AAAA,qBACE,KAAC,gBAAD;AACE,YAAA,OAAO,EAAE;AAAA,qBAAM,MAAI,CAACrC,KAAL,CAAWI,UAAX,CAAsB+B,MAAtB,EAAN;AAAA,aADX;AAEE,YAAA,KAAK,EAAEtC,KAAK,CAACuC,SAFf;AAAA,sBAIE,KAAC,IAAD;AAAM,cAAA,KAAK,EAAEvC,KAAK,CAACwC,UAAnB;AAAA;AAAA;AAJF,YADF,EAQE,KAAC,IAAD;AACE,YAAA,KAAK,EAAE;AAAEC,cAAAA,SAAS,EAAE,QAAb;AAAuBC,cAAAA,UAAU,EAAE,KAAnC;AAA0CC,cAAAA,QAAQ,EAAE;AAApD,aADT;AAAA,sBAGG,KAAKb,KAAL,CAAWN,IAAX,CAAgBoB,MAAhB,CAAuBC,UAAvB,GACC,GADD,GAEC,KAAKf,KAAL,CAAWN,IAAX,CAAgBoB,MAAhB,CAAuBE,SAFxB,GAGC,IAHD,GAIC,KAAKhB,KAAL,CAAWN,IAAX,CAAgBuB;AAPpB,YARF,EAkBE,KAAC,IAAD;AACE,YAAA,KAAK,EAAE;AACLN,cAAAA,SAAS,EAAE,QADN;AAELC,cAAAA,UAAU,EAAE,KAFP;AAGLC,cAAAA,QAAQ,EAAE,EAHL;AAILK,cAAAA,UAAU,EAAE;AAJP,aADT;AAAA,sBAQG,KAAKlB,KAAL,CAAWN,IAAX,CAAgByB;AARnB,YAlBF,EA4BE,MAAC,IAAD;AACE,YAAA,KAAK,EAAE;AAAER,cAAAA,SAAS,EAAE,MAAb;AAAqBS,cAAAA,WAAW,EAAE,EAAlC;AAAsCR,cAAAA,UAAU,EAAE;AAAlD,aADT;AAAA,uBAGG,KAAKZ,KAAL,CAAWN,IAAX,CAAgB2B,QAHnB;AAAA,YA5BF;AAAA,UADF;AAoCD;AACF;;;;EAtHoBrD,S;;AAwHvB,eAAeI,QAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { ScrollView,View,Text,FlatList,TouchableOpacity } from \"react-native\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport Style from \"./Style\";\r\nimport UploadDrafts from \"./UploadDraft\";\r\n\r\nclass ViewPost extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      post: \"\",\r\n      isLoading: true,\r\n    };\r\n  }\r\n  async componentDidMount() {\r\n    this.unsubscribe = this.props.navigation.addListener(\"focus\", () => {\r\n      this.checkLoggedIn();\r\n      UploadDrafts.dateCheck();\r\n      this.GetSinglePost(this.props.route.params.items);\r\n    });\r\n  }\r\n  componentWillUnmount() {\r\n    this.unsubscribe();\r\n  }\r\n\r\n  checkLoggedIn = async () => {\r\n    const value = await AsyncStorage.getItem(\"@session_token\");\r\n\r\n    if (value == null) {\r\n      this.props.navigation.navigate(\"Login\");\r\n    }\r\n  };\r\n  GetSinglePost = async (items) => {\r\n    const postid = items.post_id;\r\n    const id = this.props.route.params.id;\r\n\r\n    const value = await AsyncStorage.getItem(\"@session_token\");\r\n\r\n    return fetch(\r\n      \"http://localhost:3333/api/1.0.0/user/\" + id + \"/post/\" + postid,\r\n      {\r\n        headers: {\r\n          \"X-Authorization\": value,\r\n        },\r\n      }\r\n    )\r\n      .then((response) => {\r\n        if (response.status === 200) {\r\n          return response.json();\r\n        } else if (response.status === 401) {\r\n          this.props.navigation.navigate(\"Profile\");\r\n        } else {\r\n          throw \"Something went wrong\";\r\n        }\r\n      })\r\n      .then((responseJson) => {\r\n        this.setState({\r\n          post: responseJson,\r\n          isLoading: false,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    if (this.state.isLoading) {\r\n      return (\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <TouchableOpacity\r\n            onPress={() => this.props.navigation.goBack()}\r\n            style={Style.searchBtn}\r\n          >\r\n            <Text style={Style.searchText}>Back</Text>\r\n          </TouchableOpacity>\r\n          <Text>Loading..</Text>\r\n        </View>\r\n      );\r\n    } else {\r\n      return (\r\n        <View>\r\n          <TouchableOpacity\r\n            onPress={() => this.props.navigation.goBack()}\r\n            style={Style.searchBtn}\r\n          >\r\n            <Text style={Style.searchText}>Back</Text>\r\n          </TouchableOpacity>\r\n\r\n          <Text\r\n            style={{ textAlign: \"center\", fontWeight: \"800\", fontSize: 20 }}\r\n          >\r\n            {this.state.post.author.first_name +\r\n              \" \" +\r\n              this.state.post.author.last_name +\r\n              \"\\n\" +\r\n              this.state.post.timestamp}\r\n          </Text>\r\n\r\n          <Text\r\n            style={{\r\n              textAlign: \"center\",\r\n              fontWeight: \"400\",\r\n              fontSize: 15,\r\n              paddingTop: 20,\r\n            }}\r\n          >\r\n            {this.state.post.text}\r\n          </Text>\r\n          <Text\r\n            style={{ textAlign: \"left\", paddingLeft: 30, fontWeight: \"600\" }}\r\n          >\r\n            {this.state.post.numLikes} Likes\r\n          </Text>\r\n        </View>\r\n      );\r\n    }\r\n  }\r\n}\r\nexport default ViewPost;\r\n"]},"metadata":{},"sourceType":"module"}