{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport Style from \"./Style\";\nimport { ScrollView, TouchableOpacity } from \"react-native-gesture-handler\";\nimport UploadDrafts from \"./UploadDraft\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Search = function (_Component) {\n  _inherits(Search, _Component);\n\n  var _super = _createSuper(Search);\n\n  function Search(props) {\n    var _this;\n\n    _classCallCheck(this, Search);\n\n    _this = _super.call(this, props);\n\n    _this.checkLoggedIn = function _callee() {\n      var value;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"@session_token\"));\n\n            case 2:\n              value = _context.sent;\n              console.log(value);\n\n              if (value == null) {\n                _this.props.navigation.navigate(\"Login\");\n              }\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.GetSearch = function _callee2() {\n      var value;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!(_this.state.search == \"\")) {\n                _context2.next = 2;\n                break;\n              }\n\n              return _context2.abrupt(\"return\", _this.setState({\n                text: \"Error: Cant Search For Nothing\"\n              }));\n\n            case 2:\n              _context2.next = 4;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"@session_token\"));\n\n            case 4:\n              value = _context2.sent;\n\n              _this.setState({\n                text: \"\"\n              });\n\n              return _context2.abrupt(\"return\", fetch(\"http://localhost:3333/api/1.0.0/search?q=\" + _this.state.search, {\n                headers: {\n                  \"X-Authorization\": value\n                }\n              }).then(function (response) {\n                if (response.status === 200) {\n                  return response.json();\n                } else if (response.status === 401) {\n                  return response.json();\n                } else {\n                  throw \"Something went wrong\";\n                }\n              }).then(function (responseJson) {\n                console.log(responseJson);\n\n                _this.setState({\n                  isLoading: false,\n                  searchList: responseJson\n                });\n              }).catch(function (error) {\n                console.log(error);\n              }));\n\n            case 7:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.state = {\n      search: \"\",\n      searchList: [],\n      text: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(Search, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.unsubscribe = this.props.navigation.addListener(\"focus\", function () {\n        _this2.checkLoggedIn();\n\n        UploadDrafts.dateCheck();\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.unsubscribe();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return _jsxs(ScrollView, {\n        children: [_jsx(TextInput, {\n          placeholder: \"Search\",\n          onChangeText: function onChangeText(search) {\n            return _this3.setState({\n              search: search\n            });\n          },\n          value: this.state.search,\n          style: Style.inputBox\n        }), _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return _this3.GetSearch();\n          },\n          style: Style.searchBtn,\n          children: _jsx(Text, {\n            style: Style.searchText,\n            children: \"Enter\"\n          })\n        }), _jsx(Text, {\n          style: Style.errorText,\n          children: this.state.text\n        }), _jsx(FlatList, {\n          data: this.state.searchList,\n          renderItem: function renderItem(_ref) {\n            var item = _ref.item;\n            return _jsx(View, {\n              children: _jsx(TouchableOpacity, {\n                onPress: function onPress() {\n                  return _this3.props.navigation.navigate(\"Profile\", {\n                    id: String(item.user_id)\n                  });\n                },\n                style: Style.buttonStyleDefault,\n                children: _jsx(Text, {\n                  style: Style.buttonText,\n                  children: item.user_givenname + \" \" + item.user_familyname\n                })\n              })\n            });\n          },\n          keyExtractor: function keyExtractor(item, index) {\n            return item.user_id.toString();\n          }\n        })]\n      });\n    }\n  }]);\n\n  return Search;\n}(Component);\n\nexport default Search;","map":{"version":3,"sources":["C:/Users/Ruman/Documents/GitHub/spacebook2/components/Search.js"],"names":["React","Component","AsyncStorage","Style","ScrollView","TouchableOpacity","UploadDrafts","Search","props","checkLoggedIn","getItem","value","console","log","navigation","navigate","GetSearch","state","search","setState","text","fetch","headers","then","response","status","json","responseJson","isLoading","searchList","catch","error","unsubscribe","addListener","dateCheck","inputBox","searchBtn","searchText","errorText","item","id","String","user_id","buttonStyleDefault","buttonText","user_givenname","user_familyname","index","toString"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { View, Text, FlatList, TextInput } from \"react-native\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport Style from \"./Style\";\r\nimport { ScrollView, TouchableOpacity } from \"react-native-gesture-handler\";\r\nimport UploadDrafts from \"./UploadDraft\";\r\n\r\nclass Search extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      search: \"\",\r\n      searchList: [],\r\n      text: \"\",\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.unsubscribe = this.props.navigation.addListener(\"focus\", () => {\r\n      this.checkLoggedIn();\r\n      UploadDrafts.dateCheck();\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.unsubscribe();\r\n  }\r\n\r\n  checkLoggedIn = async () => {\r\n    const value = await AsyncStorage.getItem(\"@session_token\");\r\n    console.log(value);\r\n\r\n    if (value == null) {\r\n      this.props.navigation.navigate(\"Login\");\r\n    }\r\n  };\r\n\r\n  GetSearch = async () => {\r\n    if (this.state.search == \"\") {\r\n      return this.setState({ text: \"Error: Cant Search For Nothing\" });\r\n    }\r\n\r\n    const value = await AsyncStorage.getItem(\"@session_token\");\r\n\r\n    this.setState({ text: \"\" });\r\n\r\n    return fetch(\r\n      \"http://localhost:3333/api/1.0.0/search?q=\" + this.state.search,\r\n      {\r\n        headers: { \"X-Authorization\": value },\r\n      }\r\n    )\r\n      .then((response) => {\r\n        if (response.status === 200) {\r\n          return response.json();\r\n        } else if (response.status === 401) {\r\n          return response.json();\r\n        } else {\r\n          throw \"Something went wrong\";\r\n        }\r\n      })\r\n      .then((responseJson) => {\r\n        console.log(responseJson);\r\n\r\n        this.setState({\r\n          isLoading: false,\r\n          searchList: responseJson,\r\n        });\r\n      })\r\n\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  //\r\n\r\n  render() {\r\n    return (\r\n      <ScrollView>\r\n        <TextInput\r\n          placeholder=\"Search\"\r\n          onChangeText={(search) => this.setState({ search })}\r\n          value={this.state.search}\r\n          style={Style.inputBox}\r\n        />\r\n        <TouchableOpacity\r\n          onPress={() => this.GetSearch()}\r\n          style={Style.searchBtn}\r\n        >\r\n          <Text style={Style.searchText}>Enter</Text>\r\n        </TouchableOpacity>\r\n\r\n        <Text style={Style.errorText}>{this.state.text}</Text>\r\n        <FlatList\r\n          data={this.state.searchList}\r\n          renderItem={({ item }) => (\r\n            <View>\r\n              <TouchableOpacity\r\n                onPress={() =>\r\n                  this.props.navigation.navigate(\"Profile\", {\r\n                    id: String(item.user_id),\r\n                  })\r\n                }\r\n                style={Style.buttonStyleDefault}\r\n              >\r\n                <Text style={Style.buttonText}>\r\n                  {item.user_givenname + \" \" + item.user_familyname}\r\n                </Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          )}\r\n          keyExtractor={(item, index) => item.user_id.toString()}\r\n        />\r\n      </ScrollView>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Search;\r\n"]},"metadata":{},"sourceType":"module"}